// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const VALUES = 57385
const NEXT = 57386
const VALUE = 57387
const SHARE = 57388
const MODE = 57389
const SQL_NO_CACHE = 57390
const SQL_CACHE = 57391
const JOIN = 57392
const STRAIGHT_JOIN = 57393
const LEFT = 57394
const RIGHT = 57395
const INNER = 57396
const OUTER = 57397
const CROSS = 57398
const NATURAL = 57399
const USE = 57400
const FORCE = 57401
const LOWER_THAN_ON = 57402
const ON = 57403
const USING = 57404
const SUBQUERY_AS_EXPR = 57405
const LOWER_THAN_STRING = 57406
const ID = 57407
const AT_ID = 57408
const AT_AT_ID = 57409
const STRING = 57410
const VALUE_ARG = 57411
const LIST_ARG = 57412
const COMMENT = 57413
const COMMENT_KEYWORD = 57414
const INTEGRAL = 57415
const HEX = 57416
const BIT_LITERAL = 57417
const FLOAT = 57418
const HEXNUM = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const LOWER_THAN_CHARSET = 57423
const CHARSET = 57424
const UNIQUE = 57425
const KEY = 57426
const OR = 57427
const PIPE_CONCAT = 57428
const XOR = 57429
const AND = 57430
const NOT = 57431
const BETWEEN = 57432
const CASE = 57433
const WHEN = 57434
const THEN = 57435
const ELSE = 57436
const END = 57437
const LOWER_THAN_EQ = 57438
const LE = 57439
const GE = 57440
const NE = 57441
const NULL_SAFE_EQUAL = 57442
const IS = 57443
const LIKE = 57444
const REGEXP = 57445
const IN = 57446
const ASSIGNMENT = 57447
const SHIFT_LEFT = 57448
const SHIFT_RIGHT = 57449
const DIV = 57450
const MOD = 57451
const UNARY = 57452
const COLLATE = 57453
const BINARY = 57454
const UNDERSCORE_BINARY = 57455
const INTERVAL = 57456
const BEGIN = 57457
const START = 57458
const TRANSACTION = 57459
const COMMIT = 57460
const ROLLBACK = 57461
const WORK = 57462
const CONSISTENT = 57463
const SNAPSHOT = 57464
const CHAIN = 57465
const NO = 57466
const RELEASE = 57467
const PRIORITY = 57468
const QUICK = 57469
const BIT = 57470
const TINYINT = 57471
const SMALLINT = 57472
const MEDIUMINT = 57473
const INT = 57474
const INTEGER = 57475
const BIGINT = 57476
const INTNUM = 57477
const REAL = 57478
const DOUBLE = 57479
const FLOAT_TYPE = 57480
const DECIMAL = 57481
const NUMERIC = 57482
const DECIMAL_VALUE = 57483
const TIME = 57484
const TIMESTAMP = 57485
const DATETIME = 57486
const YEAR = 57487
const CHAR = 57488
const VARCHAR = 57489
const BOOL = 57490
const CHARACTER = 57491
const VARBINARY = 57492
const NCHAR = 57493
const TEXT = 57494
const TINYTEXT = 57495
const MEDIUMTEXT = 57496
const LONGTEXT = 57497
const BLOB = 57498
const TINYBLOB = 57499
const MEDIUMBLOB = 57500
const LONGBLOB = 57501
const JSON = 57502
const ENUM = 57503
const UUID = 57504
const GEOMETRY = 57505
const POINT = 57506
const LINESTRING = 57507
const POLYGON = 57508
const GEOMETRYCOLLECTION = 57509
const MULTIPOINT = 57510
const MULTILINESTRING = 57511
const MULTIPOLYGON = 57512
const INT1 = 57513
const INT2 = 57514
const INT3 = 57515
const INT4 = 57516
const INT8 = 57517
const SQL_SMALL_RESULT = 57518
const SQL_BIG_RESULT = 57519
const SQL_BUFFER_RESULT = 57520
const LOW_PRIORITY = 57521
const HIGH_PRIORITY = 57522
const DELAYED = 57523
const CREATE = 57524
const ALTER = 57525
const DROP = 57526
const RENAME = 57527
const ANALYZE = 57528
const ADD = 57529
const SCHEMA = 57530
const TABLE = 57531
const INDEX = 57532
const VIEW = 57533
const TO = 57534
const IGNORE = 57535
const IF = 57536
const PRIMARY = 57537
const COLUMN = 57538
const CONSTRAINT = 57539
const SPATIAL = 57540
const FULLTEXT = 57541
const FOREIGN = 57542
const KEY_BLOCK_SIZE = 57543
const SHOW = 57544
const DESCRIBE = 57545
const EXPLAIN = 57546
const DATE = 57547
const ESCAPE = 57548
const REPAIR = 57549
const OPTIMIZE = 57550
const TRUNCATE = 57551
const MAXVALUE = 57552
const PARTITION = 57553
const REORGANIZE = 57554
const LESS = 57555
const THAN = 57556
const PROCEDURE = 57557
const TRIGGER = 57558
const STATUS = 57559
const VARIABLES = 57560
const ROLE = 57561
const PROXY = 57562
const AVG_ROW_LENGTH = 57563
const STORAGE = 57564
const DISK = 57565
const MEMORY = 57566
const CHECKSUM = 57567
const COMPRESSION = 57568
const DATA = 57569
const DIRECTORY = 57570
const DELAY_KEY_WRITE = 57571
const ENCRYPTION = 57572
const ENGINE = 57573
const MAX_ROWS = 57574
const MIN_ROWS = 57575
const PACK_KEYS = 57576
const ROW_FORMAT = 57577
const STATS_AUTO_RECALC = 57578
const STATS_PERSISTENT = 57579
const STATS_SAMPLE_PAGES = 57580
const DYNAMIC = 57581
const COMPRESSED = 57582
const REDUNDANT = 57583
const COMPACT = 57584
const FIXED = 57585
const COLUMN_FORMAT = 57586
const AUTO_RANDOM = 57587
const RESTRICT = 57588
const CASCADE = 57589
const ACTION = 57590
const PARTIAL = 57591
const SIMPLE = 57592
const CHECK = 57593
const ENFORCED = 57594
const RANGE = 57595
const LIST = 57596
const ALGORITHM = 57597
const LINEAR = 57598
const PARTITIONS = 57599
const SUBPARTITION = 57600
const SUBPARTITIONS = 57601
const TYPE = 57602
const ANY = 57603
const SOME = 57604
const EXTERNAL = 57605
const LOCALFILE = 57606
const URL = 57607
const PREPARE = 57608
const DEALLOCATE = 57609
const PROPERTIES = 57610
const PARSER = 57611
const VISIBLE = 57612
const INVISIBLE = 57613
const BTREE = 57614
const HASH = 57615
const RTREE = 57616
const BSI = 57617
const ZONEMAP = 57618
const LEADING = 57619
const BOTH = 57620
const TRAILING = 57621
const UNKNOWN = 57622
const EXPIRE = 57623
const ACCOUNT = 57624
const UNLOCK = 57625
const DAY = 57626
const NEVER = 57627
const PUMP = 57628
const SECOND = 57629
const ASCII = 57630
const COALESCE = 57631
const COLLATION = 57632
const HOUR = 57633
const MICROSECOND = 57634
const MINUTE = 57635
const MONTH = 57636
const QUARTER = 57637
const REPEAT = 57638
const REVERSE = 57639
const ROW_COUNT = 57640
const WEEK = 57641
const REVOKE = 57642
const FUNCTION = 57643
const PRIVILEGES = 57644
const TABLESPACE = 57645
const EXECUTE = 57646
const SUPER = 57647
const GRANT = 57648
const OPTION = 57649
const REFERENCES = 57650
const REPLICATION = 57651
const SLAVE = 57652
const CLIENT = 57653
const USAGE = 57654
const RELOAD = 57655
const FILE = 57656
const TEMPORARY = 57657
const ROUTINE = 57658
const EVENT = 57659
const SHUTDOWN = 57660
const NULLX = 57661
const AUTO_INCREMENT = 57662
const APPROXNUM = 57663
const SIGNED = 57664
const UNSIGNED = 57665
const ZEROFILL = 57666
const ENGINES = 57667
const ADMIN_NAME = 57668
const RANDOM = 57669
const SUSPEND = 57670
const ATTRIBUTE = 57671
const HISTORY = 57672
const REUSE = 57673
const CURRENT = 57674
const OPTIONAL = 57675
const FAILED_LOGIN_ATTEMPTS = 57676
const PASSWORD_LOCK_TIME = 57677
const UNBOUNDED = 57678
const SECONDARY = 57679
const USER = 57680
const IDENTIFIED = 57681
const CIPHER = 57682
const ISSUER = 57683
const X509 = 57684
const SUBJECT = 57685
const SAN = 57686
const REQUIRE = 57687
const SSL = 57688
const NONE = 57689
const PASSWORD = 57690
const MAX_QUERIES_PER_HOUR = 57691
const MAX_UPDATES_PER_HOUR = 57692
const MAX_CONNECTIONS_PER_HOUR = 57693
const MAX_USER_CONNECTIONS = 57694
const FORMAT = 57695
const VERBOSE = 57696
const CONNECTION = 57697
const TRIGGERS = 57698
const PROFILES = 57699
const LOAD = 57700
const INFILE = 57701
const TERMINATED = 57702
const OPTIONALLY = 57703
const ENCLOSED = 57704
const ESCAPED = 57705
const STARTING = 57706
const LINES = 57707
const ROWS = 57708
const IMPORT = 57709
const DATABASES = 57710
const TABLES = 57711
const EXTENDED = 57712
const FULL = 57713
const PROCESSLIST = 57714
const FIELDS = 57715
const COLUMNS = 57716
const OPEN = 57717
const ERRORS = 57718
const WARNINGS = 57719
const INDEXES = 57720
const SCHEMAS = 57721
const NAMES = 57722
const GLOBAL = 57723
const SESSION = 57724
const ISOLATION = 57725
const LEVEL = 57726
const READ = 57727
const WRITE = 57728
const ONLY = 57729
const REPEATABLE = 57730
const COMMITTED = 57731
const UNCOMMITTED = 57732
const SERIALIZABLE = 57733
const LOCAL = 57734
const EVENTS = 57735
const PLUGINS = 57736
const CURRENT_TIMESTAMP = 57737
const DATABASE = 57738
const CURRENT_TIME = 57739
const LOCALTIME = 57740
const LOCALTIMESTAMP = 57741
const UTC_DATE = 57742
const UTC_TIME = 57743
const UTC_TIMESTAMP = 57744
const REPLACE = 57745
const CONVERT = 57746
const SEPARATOR = 57747
const CURRENT_DATE = 57748
const CURRENT_USER = 57749
const CURRENT_ROLE = 57750
const SECOND_MICROSECOND = 57751
const MINUTE_MICROSECOND = 57752
const MINUTE_SECOND = 57753
const HOUR_MICROSECOND = 57754
const HOUR_SECOND = 57755
const HOUR_MINUTE = 57756
const DAY_MICROSECOND = 57757
const DAY_SECOND = 57758
const DAY_MINUTE = 57759
const DAY_HOUR = 57760
const YEAR_MONTH = 57761
const SQL_TSI_HOUR = 57762
const SQL_TSI_DAY = 57763
const SQL_TSI_WEEK = 57764
const SQL_TSI_MONTH = 57765
const SQL_TSI_QUARTER = 57766
const SQL_TSI_YEAR = 57767
const SQL_TSI_SECOND = 57768
const SQL_TSI_MINUTE = 57769
const RECURSIVE = 57770
const CONFIG = 57771
const DRAINER = 57772
const MATCH = 57773
const AGAINST = 57774
const BOOLEAN = 57775
const LANGUAGE = 57776
const WITH = 57777
const QUERY = 57778
const EXPANSION = 57779
const ADDDATE = 57780
const BIT_AND = 57781
const BIT_OR = 57782
const BIT_XOR = 57783
const CAST = 57784
const COUNT = 57785
const APPROX_COUNT_DISTINCT = 57786
const APPROX_PERCENTILE = 57787
const CURDATE = 57788
const CURTIME = 57789
const DATE_ADD = 57790
const DATE_SUB = 57791
const EXTRACT = 57792
const GROUP_CONCAT = 57793
const MAX = 57794
const MID = 57795
const MIN = 57796
const NOW = 57797
const POSITION = 57798
const SESSION_USER = 57799
const STD = 57800
const STDDEV = 57801
const STDDEV_POP = 57802
const STDDEV_SAMP = 57803
const SUBDATE = 57804
const SUBSTR = 57805
const SUBSTRING = 57806
const SUM = 57807
const SYSDATE = 57808
const SYSTEM_USER = 57809
const TRANSLATE = 57810
const TRIM = 57811
const VARIANCE = 57812
const VAR_POP = 57813
const VAR_SAMP = 57814
const AVG = 57815
const JSON_EXTRACT = 57816
const UNNEST = 57817
const ROW = 57818
const OUTFILE = 57819
const HEADER = 57820
const MAX_FILE_SIZE = 57821
const FORCE_QUOTE = 57822
const UNUSED = 57823
const BINDINGS = 57824

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7677

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	21, 480,
	-2, 461,
	-1, 76,
	207, 648,
	-2, 690,
	-1, 93,
	42, 324,
	207, 324,
	234, 331,
	235, 331,
	395, 324,
	-2, 352,
	-1, 391,
	21, 481,
	-2, 444,
	-1, 432,
	390, 352,
	391, 352,
	-2, 325,
	-1, 475,
	100, 1376,
	111, 1376,
	130, 1376,
	-2, 1187,
	-1, 506,
	21, 481,
	-2, 444,
	-1, 693,
	64, 1533,
	-2, 1541,
	-1, 701,
	64, 1534,
	-2, 1549,
	-1, 703,
	64, 1530,
	-2, 1551,
	-1, 704,
	64, 1531,
	-2, 1552,
	-1, 709,
	64, 1532,
	-2, 1558,
	-1, 710,
	64, 1535,
	-2, 1559,
	-1, 711,
	64, 1536,
	-2, 1560,
	-1, 712,
	64, 947,
	-2, 1561,
	-1, 713,
	64, 948,
	-2, 1562,
	-1, 714,
	64, 949,
	-2, 1563,
	-1, 716,
	64, 1537,
	-2, 1565,
	-1, 717,
	64, 967,
	-2, 1566,
	-1, 718,
	64, 966,
	-2, 1567,
	-1, 721,
	64, 1538,
	-2, 1570,
	-1, 722,
	64, 1539,
	-2, 1571,
	-1, 728,
	64, 1029,
	-2, 1376,
	-1, 729,
	64, 1038,
	-2, 1401,
	-1, 730,
	64, 1042,
	-2, 1440,
	-1, 731,
	64, 1050,
	-2, 1493,
	-1, 732,
	64, 1053,
	-2, 1502,
	-1, 733,
	64, 1055,
	-2, 1512,
	-1, 734,
	64, 1043,
	-2, 1517,
	-1, 735,
	64, 1051,
	-2, 1521,
	-1, 736,
	64, 1032,
	-2, 1522,
	-1, 908,
	1, 674,
	65, 674,
	500, 674,
	-2, 681,
	-1, 1056,
	21, 480,
	-2, 875,
	-1, 1105,
	130, 1197,
	-2, 1195,
	-1, 1107,
	130, 592,
	-2, 1192,
	-1, 1108,
	130, 593,
	-2, 1193,
	-1, 1322,
	1, 675,
	65, 675,
	500, 675,
	-2, 681,
	-1, 1412,
	64, 1098,
	-2, 1519,
	-1, 1413,
	64, 1099,
	-2, 1520,
	-1, 1585,
	62, 394,
	131, 394,
	-2, 781,
	-1, 1921,
	84, 681,
	126, 681,
	163, 681,
	166, 681,
	-2, 729,
	-1, 1923,
	268, 843,
	-2, 823,
	-1, 1953,
	62, 394,
	131, 394,
	-2, 782,
	-1, 2032,
	84, 681,
	126, 681,
	163, 681,
	166, 681,
	-2, 730,
	-1, 2060,
	268, 843,
	-2, 824,
	-1, 2473,
	65, 702,
	131, 702,
	-2, 681,
	-1, 2477,
	65, 702,
	131, 702,
	-2, 681,
	-1, 2491,
	65, 706,
	131, 706,
	-2, 681,
	-1, 2496,
	65, 707,
	131, 707,
	-2, 681,
}

const yyPrivate = 57344

const yyLast = 23397

var yyAct = [...]int{
	888, 1415, 2479, 2485, 2477, 2476, 2454, 876, 738, 2322,
	2098, 2443, 740, 2403, 2072, 759, 1372, 2387, 2361, 2290,
	2294, 2388, 2270, 2019, 2028, 2096, 1306, 984, 1074, 2097,
	2278, 110, 110, 2125, 661, 1915, 615, 334, 341, 777,
	341, 872, 392, 1368, 1976, 2017, 2081, 1946, 1737, 949,
	113, 1561, 2061, 2114, 1588, 913, 473, 2080, 345, 879,
	1733, 1987, 339, 25, 1969, 603, 1979, 1603, 692, 1927,
	1367, 942, 1805, 592, 1738, 1742, 1282, 1815, 1991, 420,
	109, 109, 1823, 1670, 917, 1790, 351, 1752, 1329, 1748,
	739, 500, 1102, 884, 1731, 1278, 1083, 1500, 1105, 964,
	607, 474, 971, 1631, 749, 1092, 478, 1486, 1084, 110,
	1277, 945, 1354, 1602, 943, 1093, 1558, 923, 481, 34,
	1563, 338, 16, 335, 7, 336, 5, 337, 6, 3,
	1328, 2036, 893, 1323, 901, 870, 741, 1279, 1429, 684,
	968, 1312, 1315, 1416, 476, 924, 70, 987, 875, 1414,
	435, 936, 1417, 925, 935, 34, 1293, 1289, 502, 516,
	1370, 327, 1091, 861, 990, 1075, 897, 1087, 869, 25,
	1395, 630, 900, 330, 419, 465, 389, 931, 391, 574,
	640, 13, 354, 8, 2021, 353, 2369, 4, 616, 653,
	1296, 1286, 106, 2132, 2024, 1914, 889, 1086, 390, 466,
	104, 535, 101, 1534, 105, 2089, 348, 340, 683, 1283,
	2350, 642, 105, 105, 30, 95, 77, 105, 2340, 30,
	95, 77, 590, 105, 105, 34, 1542, 1294, 16, 105,
	7, 105, 5, 543, 6, 545, 499, 325, 486, 485,
	487, 409, 569, 828, 821, 771, 71, 343, 811, 479,
	810, 812, 813, 1551, 814, 815, 825, 818, 102, 952,
	953, 643, 1702, 546, 1694, 612, 102, 102, 484, 1560,
	445, 102, 846, 2376, 862, 927, 866, 827, 820, 627,
	326, 628, 71, 102, 878, 102, 619, 417, 2374, 618,
	621, 622, 428, 621, 622, 550, 567, 551, 2365, 2366,
	865, 2123, 105, 1726, 30, 95, 77, 2391, 2392, 2126,
	2127, 2128, 2129, 568, 2223, 489, 1559, 562, 1727, 2226,
	1728, 2135, 1916, 880, 1529, 553, 539, 510, 509, 519,
	965, 482, 2293, 1909, 1761, 555, 1935, 556, 508, 1290,
	1942, 961, 957, 341, 449, 110, 1313, 541, 480, 1753,
	2111, 2078, 71, 350, 2349, 1716, 102, 1975, 1974, 544,
	547, 411, 565, 566, 2194, 558, 1763, 867, 505, 507,
	564, 408, 407, 1539, 1718, 2094, 538, 384, 2197, 2401,
	385, 2091, 540, 1758, 1759, 2378, 864, 483, 548, 342,
	1757, 2188, 402, 857, 526, 2470, 2486, 519, 1760, 2410,
	450, 76, 2373, 103, 2324, 393, 1404, 1407, 1408, 1634,
	1636, 1637, 2417, 504, 2292, 2320, 2321, 1405, 2324, 420,
	2347, 93, 2181, 2352, 2353, 2464, 2150, 2149, 554, 2390,
	610, 571, 387, 506, 386, 530, 405, 1295, 2380, 2381,
	542, 1572, 634, 2330, 549, 488, 1574, 1575, 1576, 1577,
	34, 34, 620, 649, 648, 400, 528, 1566, 2455, 614,
	613, 591, 559, 606, 617, 2487, 2138, 501, 474, 474,
	474, 2481, 1671, 665, 665, 594, 595, 593, 597, 1755,
	479, 863, 349, 2221, 557, 1535, 629, 641, 406, 1382,
	341, 687, 687, 1287, 560, 561, 521, 520, 535, 600,
	596, 2446, 552, 895, 823, 512, 513, 477, 667, 1723,
	1624, 401, 1721, 670, 663, 663, 2279, 2280, 2281, 2283,
	2282, 598, 1284, 844, 1284, 1889, 344, 1379, 446, 527,
	1284, 624, 625, 1971, 1970, 665, 646, 665, 509, 2176,
	955, 2493, 829, 2172, 414, 415, 416, 956, 877, 1378,
	524, 1863, 1860, 1861, 1862, 2255, 2020, 1894, 954, 1893,
	1892, 1890, 452, 819, 521, 520, 453, 826, 2429, 410,
	2144, 1381, 1380, 644, 645, 2452, 534, 71, 71, 480,
	1640, 576, 535, 631, 1516, 631, 853, 391, 2351, 2379,
	1922, 2480, 2291, 1299, 578, 665, 1534, 1689, 908, 621,
	622, 1364, 420, 1522, 1498, 914, 665, 448, 882, 1391,
	447, 635, 2447, 904, 621, 622, 1283, 1305, 611, 1274,
	1891, 1754, 1297, 1406, 1285, 966, 1635, 31, 932, 932,
	881, 937, 874, 34, 686, 686, 937, 2090, 2195, 579,
	665, 110, 34, 647, 1764, 852, 78, 849, 1719, 848,
	930, 474, 1756, 665, 78, 78, 638, 639, 1543, 78,
	659, 660, 855, 514, 896, 78, 78, 656, 657, 658,
	978, 78, 909, 78, 960, 958, 885, 665, 671, 983,
	110, 110, 903, 871, 325, 2095, 830, 999, 835, 675,
	676, 677, 678, 679, 680, 681, 831, 682, 988, 919,
	816, 570, 529, 934, 2492, 851, 602, 850, 986, 928,
	929, 847, 31, 1746, 921, 922, 1565, 886, 873, 868,
	2499, 891, 623, 672, 894, 626, 858, 326, 446, 985,
	985, 477, 989, 2498, 2444, 2445, 962, 1895, 1896, 2177,
	2178, 918, 2489, 902, 78, 1058, 71, 2471, 967, 883,
	71, 1773, 631, 2466, 915, 920, 890, 1743, 1746, 2174,
	71, 2458, 1685, 2173, 982, 1684, 926, 1569, 1570, 71,
	1580, 2256, 2258, 2259, 2260, 2257, 911, 918, 916, 1363,
	910, 1568, 839, 840, 1586, 2457, 1640, 2405, 902, 1679,
	938, 601, 456, 2398, 492, 497, 498, 886, 1304, 1640,
	975, 976, 1317, 886, 886, 939, 933, 448, 2490, 2393,
	447, 941, 940, 1292, 996, 997, 998, 995, 993, 2467,
	1587, 1090, 1090, 1095, 650, 871, 963, 1292, 1090, 1090,
	977, 1640, 1003, 2382, 1747, 1059, 1060, 1061, 1062, 455,
	2370, 394, 980, 458, 457, 981, 972, 973, 974, 1107,
	979, 1292, 2345, 2406, 2344, 1063, 1364, 914, 1678, 2199,
	2407, 665, 2343, 996, 997, 998, 995, 2342, 1021, 1956,
	843, 2332, 1079, 2217, 859, 2199, 2215, 1774, 842, 1747,
	1364, 1724, 2213, 1108, 1740, 2211, 1029, 1057, 1741, 1744,
	479, 1581, 1787, 1316, 1633, 1065, 110, 110, 2204, 1391,
	1587, 1589, 2198, 2108, 1537, 1041, 2371, 1303, 1536, 1528,
	110, 1330, 1275, 2106, 1067, 1521, 1878, 937, 2199, 1864,
	2199, 110, 1096, 1347, 1802, 860, 2064, 334, 2199, 1301,
	1800, 1273, 1648, 2199, 991, 937, 1089, 2333, 1647, 2218,
	1745, 988, 2216, 1089, 533, 1309, 1311, 2074, 2212, 1532,
	1526, 2212, 1524, 572, 1002, 34, 494, 495, 496, 1326,
	2067, 832, 669, 1941, 1333, 522, 2062, 479, 2199, 2109,
	1338, 2076, 2077, 1518, 479, 989, 1332, 2063, 665, 2107,
	1300, 1082, 1640, 503, 1778, 1640, 1715, 1713, 608, 1056,
	1803, 1099, 687, 1106, 110, 1097, 1801, 1272, 1640, 1373,
	1373, 1400, 1291, 1402, 1640, 2441, 1339, 1340, 652, 1100,
	1271, 1101, 2068, 1501, 836, 1333, 1519, 2430, 1525, 1389,
	1374, 1425, 1426, 1276, 1341, 1040, 1039, 1049, 1050, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1041, 1714, 1298, 1519,
	1324, 535, 1333, 1343, 1687, 1345, 1299, 1562, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1318, 1079, 1337, 1495, 1496, 1394, 480, 532, 1292, 1281,
	632, 1336, 1342, 480, 1409, 1392, 926, 2334, 1510, 1880,
	837, 1349, 71, 1350, 1346, 651, 1348, 1512, 1344, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1041, 1375, 2075, 2229,
	1739, 1040, 1039, 1049, 1050, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1041, 1385, 1386, 1387, 886, 886, 886, 1838,
	1280, 1419, 1418, 654, 1788, 2070, 1722, 996, 997, 998,
	995, 1393, 1523, 1384, 655, 686, 1886, 533, 511, 1396,
	1397, 1398, 1399, 1493, 1494, 1884, 454, 2069, 2071, 1044,
	1045, 1046, 1047, 1048, 1041, 1501, 1488, 1676, 1491, 1492,
	1490, 1422, 1556, 391, 899, 633, 995, 1515, 1420, 1421,
	2385, 1423, 998, 995, 1464, 412, 2475, 1459, 1460, 1461,
	1462, 1463, 2184, 2460, 1469, 1470, 1471, 1472, 1473, 2183,
	1931, 2463, 996, 997, 998, 995, 1376, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1004, 1926, 1503, 2167, 1424, 2427,
	1502, 2078, 1505, 2207, 2208, 1427, 1826, 1873, 1504, 1506,
	1507, 2205, 2206, 2065, 2411, 1428, 1657, 1511, 2308, 2305,
	2013, 2462, 2304, 1513, 1846, 1850, 1852, 1854, 1856, 1857,
	1859, 2272, 1863, 1860, 1861, 1862, 459, 1681, 1841, 1842,
	1843, 1844, 1824, 1825, 1847, 2250, 1827, 2249, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1845,
	1644, 451, 2012, 2266, 1530, 2264, 1656, 1849, 1851, 1853,
	1855, 1858, 1749, 2262, 665, 2248, 665, 2245, 665, 996,
	997, 998, 995, 509, 996, 997, 998, 995, 996, 997,
	998, 995, 1549, 1544, 2239, 2236, 1307, 1308, 2265, 2235,
	2263, 1840, 2133, 2119, 1052, 2252, 1055, 665, 2261, 996,
	997, 998, 995, 996, 997, 998, 995, 1540, 1585, 2118,
	2117, 1053, 1054, 1051, 1591, 1040, 1039, 1049, 1050, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1041, 2297, 1599, 2113,
	2251, 2112, 509, 110, 110, 110, 110, 996, 997, 998,
	995, 2092, 1604, 1938, 509, 110, 1619, 1762, 1709, 996,
	997, 998, 995, 1939, 1604, 1555, 833, 1583, 509, 2400,
	2384, 1579, 2219, 665, 996, 997, 998, 995, 1623, 2271,
	2029, 110, 110, 2193, 25, 2367, 2093, 2328, 1541, 905,
	906, 907, 1548, 2491, 996, 997, 998, 995, 1940, 384,
	2327, 1531, 385, 1620, 1533, 996, 997, 998, 995, 1538,
	1373, 2315, 1592, 1594, 2303, 1645, 1595, 2253, 1816, 1817,
	2246, 2242, 871, 2241, 2240, 2196, 2169, 1593, 1554, 2134,
	1629, 1630, 2130, 886, 1596, 2115, 1597, 1552, 1553, 894,
	34, 1571, 2027, 16, 1324, 7, 1578, 5, 1584, 6,
	2025, 1590, 1965, 2120, 1598, 902, 1600, 1605, 1606, 1607,
	1608, 1601, 1999, 1964, 1949, 1616, 1618, 1617, 1937, 1936,
	1933, 1672, 1911, 391, 1628, 996, 997, 998, 995, 1902,
	1751, 1665, 1720, 1625, 996, 997, 998, 995, 1627, 2461,
	1546, 1668, 1669, 1040, 1039, 1049, 1050, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1041, 1638, 785, 784, 1998, 1514,
	1090, 1302, 1698, 1090, 1037, 1036, 1701, 1035, 834, 2468,
	1766, 898, 2356, 2355, 2335, 665, 2302, 2301, 2300, 1848,
	996, 997, 998, 995, 2299, 1707, 1040, 1039, 1049, 1050,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1041, 509, 2214,
	2210, 1641, 2209, 2016, 1642, 1643, 2014, 2011, 1736, 2003,
	1968, 1950, 1921, 1904, 110, 1804, 1779, 71, 1686, 1708,
	1683, 1695, 1667, 509, 1682, 1680, 1664, 110, 1330, 1703,
	1777, 1649, 1646, 1736, 1639, 1488, 1621, 1675, 1666, 1509,
	1508, 673, 2488, 1651, 1652, 1653, 1654, 1655, 2440, 1659,
	2434, 1693, 105, 1660, 1661, 1662, 1663, 1697, 1717, 1690,
	885, 1705, 1712, 1767, 1704, 1691, 1700, 1706, 1699, 2418,
	1711, 1768, 1769, 1770, 1808, 1696, 479, 2415, 2413, 2423,
	1997, 1022, 1673, 2307, 2288, 1677, 1039, 1049, 1050, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1041, 1688, 1775, 2276,
	2273, 886, 996, 997, 998, 995, 102, 886, 2268, 2230,
	395, 396, 397, 398, 1978, 1772, 1776, 1771, 1780, 2191,
	665, 1781, 1782, 394, 2190, 1799, 665, 1786, 2189, 1785,
	1784, 2186, 2180, 1795, 1901, 2165, 1900, 604, 1988, 1783,
	1980, 1992, 1798, 1049, 1050, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1041, 1995, 1897, 1985, 996, 997, 998, 995,
	1899, 663, 110, 1883, 110, 1808, 1984, 663, 2187, 674,
	1877, 110, 1962, 105, 1876, 1056, 95, 77, 1944, 1932,
	1925, 1882, 2421, 1875, 1489, 996, 997, 998, 995, 102,
	1582, 1879, 996, 997, 998, 995, 996, 997, 998, 995,
	1557, 1888, 1881, 1903, 71, 996, 997, 998, 995, 665,
	665, 1910, 71, 1912, 110, 1953, 1517, 1383, 1377, 1331,
	1920, 2389, 1874, 1081, 1810, 1080, 1078, 102, 509, 1908,
	1077, 1905, 1919, 1076, 1865, 1073, 1072, 1907, 1604, 1906,
	1070, 1871, 1872, 1945, 996, 997, 998, 995, 1069, 1967,
	663, 1947, 1924, 1930, 1923, 1870, 1929, 1928, 1068, 1928,
	1885, 1066, 1038, 1373, 1869, 1898, 1034, 1335, 1868, 1958,
	1033, 1032, 1955, 1031, 1030, 1028, 1027, 996, 997, 998,
	995, 1867, 1026, 1951, 1025, 1952, 996, 997, 998, 995,
	996, 997, 998, 995, 1866, 1959, 1024, 1023, 1320, 2438,
	1954, 1020, 1019, 996, 997, 998, 995, 1018, 1957, 1017,
	1016, 1982, 1983, 1813, 1015, 1014, 996, 997, 998, 995,
	1013, 856, 1972, 822, 573, 537, 1986, 1791, 1792, 1990,
	525, 1960, 1981, 1794, 1573, 996, 997, 998, 995, 1390,
	536, 1450, 1797, 1796, 1610, 1989, 1040, 1039, 1049, 1050,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1041, 1609, 2474,
	1613, 1611, 1527, 509, 2033, 1614, 1612, 2082, 2084, 1812,
	2082, 2082, 886, 1736, 2004, 1961, 1520, 2006, 1963, 2008,
	1993, 1325, 1996, 1811, 1615, 509, 1360, 1361, 1547, 2001,
	1966, 996, 997, 998, 995, 2007, 1497, 2005, 2022, 1545,
	2009, 2010, 575, 914, 1730, 996, 997, 998, 995, 1314,
	1351, 531, 2079, 2136, 2083, 71, 56, 33, 996, 997,
	998, 995, 2358, 2058, 1307, 1308, 2030, 2085, 2086, 32,
	1356, 1359, 1360, 1361, 1357, 2104, 1358, 1362, 1729, 1366,
	1356, 1359, 1360, 1361, 1357, 2087, 1358, 1362, 1955, 2436,
	2101, 322, 323, 912, 1419, 1418, 637, 2000, 2105, 587,
	588, 585, 586, 636, 324, 583, 584, 581, 582, 563,
	2002, 395, 396, 397, 398, 2140, 2102, 2103, 107, 2116,
	1446, 1270, 605, 1443, 394, 577, 2435, 1445, 1442, 1444,
	1448, 1449, 2312, 2310, 2233, 1447, 1040, 1039, 1049, 1050,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1041, 2231, 665,
	321, 2228, 2227, 2168, 2225, 2026, 2088, 1918, 1917, 110,
	1807, 580, 394, 1806, 1632, 918, 2141, 2142, 2084, 2145,
	2146, 2147, 2148, 2143, 1710, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2079,
	1947, 2425, 2424, 2166, 1650, 523, 2170, 2424, 2425, 2182,
	1365, 609, 39, 1, 1288, 1934, 1765, 1750, 2185, 599,
	413, 1465, 589, 841, 2192, 491, 518, 838, 517, 515,
	1499, 1430, 2234, 2200, 772, 2203, 1085, 2202, 2269, 2357,
	2402, 2306, 2360, 854, 758, 2220, 1725, 2121, 2224, 2122,
	2222, 2124, 1550, 2018, 2267, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1453, 1454, 1455, 1456,
	1457, 1458, 1451, 1452, 1692, 424, 782, 509, 775, 1071,
	509, 509, 509, 824, 817, 2237, 2238, 2247, 493, 2232,
	509, 2243, 2244, 774, 1373, 1943, 1567, 399, 490, 425,
	2110, 1913, 2277, 1973, 1994, 2285, 2286, 2287, 1977, 2284,
	2484, 2473, 2274, 2453, 2433, 2323, 2469, 2296, 2372, 2295,
	2416, 2317, 2409, 2319, 2137, 355, 959, 463, 665, 665,
	2298, 2289, 356, 2201, 1334, 2348, 2275, 403, 1319, 404,
	2311, 1322, 2313, 2314, 1321, 1410, 2318, 1005, 2309, 1487,
	1064, 690, 1674, 748, 742, 1564, 2073, 1626, 38, 110,
	37, 36, 2325, 2326, 994, 1103, 773, 509, 2015, 663,
	663, 112, 1104, 2316, 2131, 2362, 757, 756, 755, 509,
	754, 753, 1355, 1353, 1352, 947, 2331, 946, 992, 2386,
	2338, 2339, 2341, 2337, 2023, 2179, 2254, 2175, 2364, 2171,
	2329, 2032, 2031, 2059, 2346, 2060, 2066, 1822, 985, 1818,
	1820, 1821, 1819, 2363, 2354, 1040, 1039, 1049, 1050, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1041, 2368, 1887, 1814,
	1734, 1735, 1732, 1793, 2375, 2377, 1789, 1094, 892, 948,
	944, 2100, 388, 24, 12, 11, 2383, 845, 10, 15,
	23, 22, 21, 2394, 2395, 2396, 2397, 20, 64, 63,
	62, 2404, 2408, 61, 19, 9, 60, 59, 58, 18,
	17, 53, 71, 2412, 54, 2414, 1040, 1039, 1049, 1050,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1041, 49, 48,
	47, 2399, 423, 46, 45, 2419, 2422, 2364, 2432, 2420,
	44, 43, 52, 2426, 509, 51, 509, 2336, 2428, 50,
	42, 2437, 2363, 2439, 877, 2431, 877, 2442, 41, 40,
	75, 74, 73, 72, 26, 27, 28, 2448, 29, 85,
	84, 509, 2404, 2449, 86, 2456, 82, 80, 2459, 83,
	81, 877, 79, 2465, 35, 14, 2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2472, 0, 0, 0, 0, 0,
	2483, 0, 0, 2482, 0, 0, 0, 0, 0, 0,
	2494, 0, 0, 0, 2495, 2497, 2496, 1216, 1258, 2483,
	0, 1205, 0, 1165, 1218, 1139, 1154, 1226, 1155, 1156,
	1191, 1118, 1174, 237, 1152, 0, 0, 0, 0, 0,
	0, 1208, 1110, 1142, 1143, 1112, 1149, 1113, 1140, 1167,
	182, 1138, 1177, 207, 1224, 0, 0, 267, 221, 0,
	0, 1170, 1210, 1172, 1196, 1164, 1192, 1126, 1185, 1219,
	1153, 0, 1189, 1220, 0, 0, 0, 0, 905, 906,
	907, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 1188, 1214, 1151, 2451, 167, 1217, 1171, 1190, 0,
	0, 1111, 1186, 0, 1116, 1119, 1225, 1212, 1146, 1147,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 1173,
	1193, 1161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1144, 0, 1182, 0, 0, 0, 1121, 1117, 0,
	1166, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 1257, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 1120, 295, 160, 1252, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 1236,
	1237, 1238, 1239, 1240, 1248, 1249, 0, 1253, 1254, 1255,
	1125, 0, 1145, 1194, 0, 1109, 1203, 1211, 1163, 297,
	1213, 1160, 1159, 1243, 0, 1242, 271, 1244, 1245, 206,
	1209, 1141, 1150, 313, 1148, 257, 239, 1215, 1181, 1256,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 1241,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 1250, 0, 1251, 309, 189,
	150, 292, 0, 235, 0, 1206, 1114, 1124, 1122, 1157,
	1183, 1184, 231, 308, 1198, 1202, 1199, 1227, 260, 0,
	0, 0, 0, 0, 200, 241, 1200, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	268, 290, 302, 319, 1259, 1260, 1261, 1262, 0, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 293, 1158, 1132, 1169,
	301, 1135, 1133, 1197, 1134, 1187, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 1178, 1162, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1179, 1137, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 1204, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 1131, 1136, 1130, 1175, 1176, 1221, 1222,
	1223, 1195, 1123, 1207, 1127, 1129, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1201, 0, 779, 1180,
	151, 0, 208, 1228, 249, 187, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 267, 221, 0, 0, 0, 0, 794, 800,
	0, 0, 0, 0, 1246, 1247, 305, 306, 307, 291,
	743, 0, 0, 691, 785, 784, 760, 769, 0, 0,
	164, 761, 0, 768, 762, 766, 765, 763, 764, 0,
	728, 0, 0, 0, 0, 0, 0, 688, 747, 0,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 745, 0, 0, 0, 0, 780, 0,
	746, 0, 0, 781, 0, 770, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	0, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 767, 731, 735, 176, 733, 778,
	295, 160, 0, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 805, 197, 245, 211, 246,
	198, 223, 222, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 776, 0, 0, 297, 0, 0, 793, 0, 0,
	0, 271, 0, 0, 206, 0, 0, 0, 736, 0,
	257, 239, 803, 689, 0, 255, 209, 282, 247, 288,
	273, 296, 251, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 0, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	1467, 1466, 1468, 309, 189, 150, 292, 791, 235, 0,
	802, 787, 788, 789, 792, 795, 796, 730, 734, 797,
	799, 801, 804, 260, 0, 0, 0, 0, 0, 200,
	241, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 290, 302, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 737, 225, 226, 227, 228, 729, 0, 169, 320,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 0, 232, 199, 265, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 214, 0, 0, 811, 790,
	810, 812, 813, 809, 814, 815, 798, 752, 0, 807,
	806, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 208, 0, 249,
	187, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 129, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 783, 786, 0,
	0, 305, 306, 307, 291, 105, 0, 779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 182, 0, 0, 207, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 794, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	0, 0, 691, 785, 784, 760, 769, 0, 0, 164,
	761, 0, 768, 762, 766, 765, 763, 764, 0, 728,
	0, 0, 0, 0, 0, 0, 688, 747, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 745, 0, 0, 0, 0, 780, 0, 746,
	0, 0, 781, 0, 770, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 767, 731, 735, 176, 733, 778, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 805, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 0, 297, 0, 0, 793, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 736, 0, 257,
	239, 803, 689, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 791, 235, 0, 802,
	787, 788, 789, 792, 795, 796, 730, 734, 797, 799,
	801, 804, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	737, 225, 226, 227, 228, 729, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 811, 790, 810,
	812, 813, 809, 814, 815, 798, 752, 0, 807, 806,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 78, 249, 187,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 129, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 783, 786, 779, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 182, 887, 0, 207, 0,
	0, 0, 267, 221, 0, 0, 0, 0, 794, 800,
	0, 0, 0, 0, 0, 0, 0, 969, 0, 0,
	743, 0, 0, 691, 785, 784, 760, 769, 0, 0,
	164, 761, 0, 768, 762, 766, 765, 763, 764, 0,
	728, 0, 0, 0, 0, 0, 0, 688, 747, 0,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 745, 0, 0, 0, 0, 780, 0,
	746, 0, 0, 970, 0, 770, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	0, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 767, 731, 735, 176, 733, 778,
	295, 160, 0, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 805, 197, 245, 211, 246,
	198, 223, 222, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 776, 0, 0, 297, 0, 0, 793, 0, 0,
	0, 271, 0, 0, 206, 0, 0, 0, 736, 0,
	257, 239, 803, 689, 0, 255, 209, 282, 247, 288,
	273, 296, 251, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 0, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 309, 189, 150, 292, 791, 235, 0,
	802, 787, 788, 789, 792, 795, 796, 730, 734, 797,
	799, 801, 804, 260, 0, 0, 0, 0, 0, 200,
	241, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 290, 302, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 737, 225, 226, 227, 228, 729, 0, 169, 320,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 0, 232, 199, 265, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 214, 0, 0, 811, 790,
	810, 812, 813, 809, 814, 815, 798, 752, 0, 807,
	806, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 208, 0, 249,
	187, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 129, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 783, 786, 779,
	0, 305, 306, 307, 291, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 182, 2450, 0, 207,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 794,
	800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 691, 785, 784, 760, 769, 0,
	0, 164, 761, 0, 768, 762, 766, 765, 763, 764,
	0, 728, 0, 0, 0, 0, 0, 0, 688, 747,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 745, 0, 0, 0, 0, 780,
	0, 746, 0, 0, 781, 0, 770, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 767, 731, 735, 176, 733,
	778, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 805, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 0, 297, 0, 0, 793, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 736,
	0, 257, 239, 803, 689, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 791, 235,
	0, 802, 787, 788, 789, 792, 795, 796, 730, 734,
	797, 799, 801, 804, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 737, 225, 226, 227, 228, 729, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 811,
	790, 810, 812, 813, 809, 814, 815, 798, 752, 0,
	807, 806, 808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 129, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 783, 786,
	779, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 182, 887, 0,
	207, 0, 0, 0, 267, 221, 0, 0, 0, 0,
	794, 800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 0, 0, 691, 785, 784, 760, 769,
	0, 0, 164, 761, 0, 768, 762, 766, 765, 763,
	764, 0, 728, 0, 0, 0, 0, 0, 0, 688,
	747, 0, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 744, 745, 0, 0, 0, 0,
	780, 0, 746, 0, 0, 781, 0, 770, 0, 0,
	156, 272, 287, 165, 263, 300, 170, 270, 161, 236,
	259, 0, 0, 158, 285, 269, 218, 201, 202, 157,
	0, 254, 180, 193, 177, 234, 767, 731, 735, 176,
	733, 778, 295, 160, 0, 294, 233, 281, 286, 219,
	213, 159, 283, 217, 212, 205, 184, 805, 197, 245,
	211, 246, 198, 223, 222, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 0, 297, 0, 0, 793,
	0, 0, 0, 271, 0, 0, 206, 0, 0, 0,
	736, 0, 257, 239, 803, 689, 0, 255, 209, 282,
	247, 288, 273, 296, 251, 248, 152, 274, 179, 220,
	162, 163, 175, 181, 183, 185, 186, 229, 230, 242,
	262, 275, 276, 277, 178, 171, 256, 172, 195, 173,
	153, 264, 174, 154, 243, 280, 0, 191, 252, 216,
	155, 215, 244, 279, 278, 304, 310, 311, 315, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 309, 189, 150, 292, 791,
	235, 0, 802, 787, 788, 789, 792, 795, 796, 730,
	734, 797, 799, 801, 804, 260, 0, 0, 0, 0,
	0, 200, 241, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 290, 302,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 737, 225, 226, 227, 228, 729, 0,
	169, 320, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 188, 194, 0, 196, 168,
	240, 190, 299, 203, 0, 232, 199, 265, 204, 210,
	253, 298, 238, 258, 166, 289, 266, 214, 0, 0,
	811, 790, 810, 812, 813, 809, 814, 815, 798, 752,
	0, 807, 806, 808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 208,
	0, 249, 187, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 129, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 783,
	786, 0, 0, 305, 306, 307, 291, 779, 0, 0,
	1658, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 182, 0, 0, 207, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 794, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	0, 0, 691, 785, 784, 760, 769, 0, 0, 164,
	761, 0, 768, 762, 766, 765, 763, 764, 0, 728,
	0, 0, 0, 0, 0, 0, 688, 747, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 745, 0, 0, 0, 0, 780, 0, 746,
	0, 0, 781, 0, 770, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 767, 731, 735, 176, 733, 778, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 805, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 0, 297, 0, 0, 793, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 736, 0, 257,
	239, 803, 689, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 791, 235, 0, 802,
	787, 788, 789, 792, 795, 796, 730, 734, 797, 799,
	801, 804, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	737, 225, 226, 227, 228, 729, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 811, 790, 810,
	812, 813, 809, 814, 815, 798, 752, 0, 807, 806,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 129, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 783, 786, 779, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 267, 221, 0, 0, 0, 0, 794, 800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 0, 0, 691, 785, 784, 760, 769, 0, 0,
	164, 761, 0, 768, 762, 766, 765, 763, 764, 0,
	728, 0, 0, 0, 0, 0, 0, 688, 747, 0,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 745, 685, 0, 0, 0, 780, 0,
	746, 0, 0, 781, 0, 770, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	0, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 767, 731, 735, 176, 733, 778,
	295, 160, 0, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 805, 197, 245, 211, 246,
	198, 223, 222, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 776, 0, 0, 297, 0, 0, 793, 0, 0,
	0, 271, 0, 0, 206, 0, 0, 0, 736, 0,
	257, 239, 803, 689, 0, 255, 209, 282, 247, 288,
	273, 296, 251, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 0, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 309, 189, 150, 292, 791, 235, 0,
	802, 787, 788, 789, 792, 795, 796, 730, 734, 797,
	799, 801, 804, 260, 0, 0, 0, 0, 0, 200,
	241, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 290, 302, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 737, 225, 226, 227, 228, 729, 0, 169, 320,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 0, 232, 199, 265, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 214, 0, 0, 811, 790,
	810, 812, 813, 809, 814, 815, 798, 752, 0, 807,
	806, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 208, 0, 249,
	187, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 129, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 783, 786, 779,
	0, 305, 306, 307, 291, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 182, 0, 0, 207,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 794,
	800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 691, 785, 784, 760, 769, 0,
	0, 164, 761, 0, 768, 762, 766, 765, 763, 764,
	0, 728, 0, 0, 0, 0, 0, 0, 688, 747,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 745, 0, 0, 0, 0, 780,
	0, 746, 0, 0, 781, 0, 770, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 767, 731, 735, 176, 733,
	778, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 805, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 0, 297, 0, 0, 793, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 736,
	0, 257, 239, 803, 689, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 791, 235,
	0, 802, 787, 788, 789, 792, 795, 796, 730, 734,
	797, 799, 801, 804, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 737, 225, 226, 227, 228, 729, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 811,
	790, 810, 812, 813, 809, 814, 815, 798, 752, 0,
	807, 806, 808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 129, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 783, 786,
	779, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 750, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 267, 221, 0, 0, 0, 0,
	794, 800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 0, 0, 691, 785, 784, 760, 769,
	0, 0, 164, 761, 0, 768, 762, 766, 765, 763,
	764, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	747, 0, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 744, 745, 0, 0, 0, 0,
	780, 0, 746, 0, 0, 781, 0, 770, 0, 0,
	156, 272, 287, 165, 263, 300, 170, 270, 161, 236,
	259, 0, 0, 158, 285, 269, 218, 201, 202, 157,
	0, 254, 180, 193, 177, 234, 767, 731, 735, 176,
	733, 778, 295, 160, 0, 294, 233, 281, 286, 219,
	213, 159, 283, 217, 212, 205, 184, 805, 197, 245,
	211, 246, 198, 223, 222, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 0, 297, 0, 0, 793,
	0, 0, 0, 271, 0, 0, 206, 0, 0, 0,
	736, 0, 257, 239, 803, 0, 0, 255, 209, 282,
	247, 288, 273, 296, 251, 248, 152, 274, 179, 220,
	162, 163, 175, 181, 183, 185, 186, 229, 230, 242,
	262, 275, 276, 277, 178, 171, 256, 172, 195, 173,
	153, 264, 174, 154, 243, 280, 0, 191, 252, 216,
	155, 215, 244, 279, 278, 304, 1412, 1413, 315, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 309, 189, 150, 292, 791,
	235, 0, 802, 787, 788, 789, 792, 795, 796, 730,
	734, 797, 799, 801, 804, 260, 0, 0, 0, 0,
	0, 200, 241, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 290, 302,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 737, 225, 226, 227, 228, 729, 0,
	169, 320, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 188, 194, 0, 196, 168,
	240, 190, 299, 203, 0, 232, 199, 265, 204, 210,
	253, 298, 238, 258, 166, 289, 266, 214, 0, 0,
	811, 790, 810, 812, 813, 809, 814, 815, 798, 752,
	0, 807, 806, 808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 208,
	0, 249, 187, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 129, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 783,
	786, 779, 0, 305, 306, 307, 291, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 182, 0,
	0, 207, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 794, 800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 691, 785, 784, 760,
	769, 0, 0, 164, 761, 0, 768, 762, 766, 765,
	763, 764, 0, 728, 0, 0, 0, 0, 0, 0,
	688, 747, 0, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 745, 0, 0, 0,
	0, 780, 0, 746, 0, 0, 781, 0, 770, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 767, 731, 735,
	176, 733, 778, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 805, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 776, 0, 0, 297, 0, 0,
	793, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 736, 0, 257, 239, 803, 689, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	791, 235, 0, 802, 787, 788, 789, 792, 795, 796,
	730, 734, 797, 799, 801, 804, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 737, 225, 226, 227, 228, 729,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 811, 790, 810, 812, 813, 809, 814, 815, 798,
	752, 0, 807, 806, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 129,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	783, 786, 779, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 182,
	0, 0, 207, 0, 0, 0, 267, 221, 0, 0,
	0, 0, 794, 800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 0, 0, 691, 785, 784,
	760, 769, 0, 0, 164, 761, 0, 768, 762, 766,
	765, 763, 764, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 747, 0, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 745, 0, 0,
	0, 0, 780, 0, 746, 0, 0, 781, 0, 770,
	0, 0, 156, 272, 287, 165, 263, 300, 170, 270,
	161, 236, 259, 0, 0, 158, 285, 269, 218, 201,
	202, 157, 0, 254, 180, 193, 177, 234, 767, 731,
	735, 176, 733, 778, 295, 160, 0, 294, 233, 281,
	286, 219, 213, 159, 283, 217, 212, 205, 184, 805,
	197, 245, 211, 246, 198, 223, 222, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 0, 0, 297, 0,
	0, 793, 0, 0, 0, 271, 0, 0, 206, 0,
	0, 0, 736, 0, 257, 239, 803, 0, 0, 255,
	209, 282, 247, 288, 273, 296, 251, 248, 152, 274,
	179, 220, 162, 163, 175, 181, 183, 185, 186, 229,
	230, 242, 262, 275, 276, 277, 178, 171, 256, 172,
	195, 173, 153, 264, 174, 154, 243, 280, 0, 191,
	252, 216, 155, 215, 244, 279, 278, 304, 310, 311,
	315, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 309, 189, 150,
	292, 791, 235, 0, 802, 787, 788, 789, 792, 795,
	796, 730, 734, 797, 799, 801, 804, 260, 0, 0,
	0, 0, 0, 200, 241, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	290, 302, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 737, 225, 226, 227, 228,
	729, 0, 169, 320, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 188, 194, 0,
	196, 168, 240, 190, 299, 203, 0, 232, 199, 265,
	204, 210, 253, 298, 238, 258, 166, 289, 266, 214,
	0, 0, 811, 790, 810, 812, 813, 809, 814, 815,
	798, 752, 0, 807, 806, 808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 208, 0, 249, 187, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	129, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 783, 786, 0, 0, 305, 306, 307, 291, 105,
	0, 30, 95, 77, 0, 0, 0, 0, 0, 0,
	0, 237, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 207, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 329,
	331, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 31,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 78, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 267, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 1743, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 272, 287, 165, 263, 300, 170, 270, 161, 236,
	259, 0, 0, 158, 285, 269, 218, 201, 202, 157,
	0, 254, 180, 193, 177, 234, 0, 284, 312, 176,
	303, 0, 295, 160, 0, 294, 233, 281, 286, 219,
	213, 159, 283, 217, 212, 205, 184, 0, 197, 245,
	211, 246, 198, 223, 222, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 297, 0, 0, 0,
	1740, 0, 1739, 271, 1741, 1744, 206, 0, 0, 0,
	313, 0, 257, 239, 0, 0, 0, 255, 209, 282,
	247, 288, 273, 296, 251, 248, 152, 274, 179, 220,
	162, 163, 175, 181, 183, 185, 186, 229, 230, 242,
	262, 275, 276, 277, 178, 171, 256, 172, 195, 173,
	153, 264, 174, 154, 243, 280, 1745, 191, 252, 216,
	155, 215, 244, 279, 278, 304, 310, 311, 315, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 309, 189, 150, 292, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	308, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 200, 241, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 290, 302,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 317, 225, 226, 227, 228, 192, 0,
	169, 320, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 188, 194, 0, 196, 168,
	240, 190, 299, 203, 0, 232, 199, 265, 204, 210,
	253, 298, 238, 258, 166, 289, 266, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 208,
	0, 249, 187, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 237,
	0, 0, 0, 305, 306, 307, 291, 0, 0, 0,
	0, 1000, 0, 0, 0, 0, 182, 0, 0, 207,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 1001, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 996, 997, 998, 995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 237, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 462, 0, 207, 0,
	0, 0, 267, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 470, 471, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	0, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 0, 284, 312, 176, 303, 448,
	295, 160, 447, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 0, 197, 245, 211, 246,
	198, 223, 222, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 206, 0, 0, 0, 313, 0,
	257, 239, 0, 0, 0, 255, 209, 282, 247, 288,
	273, 296, 460, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 0, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 309, 189, 150, 292, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 308, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 200,
	241, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 290, 302, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 293, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 464, 225, 226, 227, 228, 192, 0, 169, 320,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 0, 472, 467, 468, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 208, 0, 249,
	187, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 105, 0, 0,
	0, 305, 306, 307, 291, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 207,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 1098, 0, 111, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 78,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 105, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 267, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 1088, 0, 111, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 272, 287, 165, 263, 300, 170, 270, 161, 236,
	259, 0, 0, 158, 285, 269, 218, 201, 202, 157,
	0, 254, 180, 193, 177, 234, 0, 284, 312, 176,
	303, 0, 295, 160, 0, 294, 233, 281, 286, 219,
	213, 159, 283, 217, 212, 205, 184, 0, 197, 245,
	211, 246, 198, 223, 222, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 206, 0, 0, 0,
	313, 0, 257, 239, 0, 0, 0, 255, 209, 282,
	247, 288, 273, 296, 251, 248, 152, 274, 179, 220,
	162, 163, 175, 181, 183, 185, 186, 229, 230, 242,
	262, 275, 276, 277, 178, 171, 256, 172, 195, 173,
	153, 264, 174, 154, 243, 280, 0, 191, 252, 216,
	155, 215, 244, 279, 278, 304, 310, 311, 315, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 309, 189, 150, 292, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	308, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 200, 241, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 290, 302,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 317, 225, 226, 227, 228, 192, 0,
	169, 320, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 188, 194, 0, 196, 168,
	240, 190, 299, 203, 0, 232, 199, 265, 204, 210,
	253, 298, 238, 258, 166, 289, 266, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 208,
	78, 249, 187, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 237,
	0, 0, 0, 305, 306, 307, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 207,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 470, 471, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	448, 295, 160, 447, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 472, 467, 468, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 237, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 668, 0, 207, 0,
	0, 0, 267, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 0, 0, 666, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	0, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 0, 284, 312, 176, 303, 0,
	295, 160, 0, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 0, 197, 245, 211, 246,
	198, 223, 222, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 206, 0, 0, 0, 313, 0,
	257, 239, 0, 0, 0, 255, 209, 282, 247, 288,
	273, 296, 251, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 0, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 309, 189, 150, 292, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 308, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 200,
	241, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 290, 302, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 317, 225, 226, 227, 228, 192, 0, 169, 320,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 0, 232, 199, 265, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 208, 0, 249,
	187, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 237, 0, 0,
	0, 305, 306, 307, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 662, 0, 207, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 666, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 0, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	317, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 237, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	267, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2359,
	0, 111, 785, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 272, 287, 165,
	263, 300, 170, 270, 161, 236, 259, 0, 0, 158,
	285, 269, 218, 201, 202, 157, 0, 254, 180, 193,
	177, 234, 0, 284, 312, 176, 303, 0, 295, 160,
	0, 294, 233, 281, 286, 219, 213, 159, 283, 217,
	212, 205, 184, 0, 197, 245, 211, 246, 198, 223,
	222, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 206, 0, 0, 0, 313, 0, 257, 239,
	0, 0, 0, 255, 209, 282, 247, 288, 273, 296,
	251, 248, 152, 274, 179, 220, 162, 163, 175, 181,
	183, 185, 186, 229, 230, 242, 262, 275, 276, 277,
	178, 171, 256, 172, 195, 173, 153, 264, 174, 154,
	243, 280, 0, 191, 252, 216, 155, 215, 244, 279,
	278, 304, 310, 311, 315, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 309, 189, 150, 292, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 308, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 200, 241, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 290, 302, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 317,
	225, 226, 227, 228, 192, 0, 169, 320, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 188, 194, 0, 196, 168, 240, 190, 299, 203,
	0, 232, 199, 265, 204, 210, 253, 298, 238, 258,
	166, 289, 266, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 208, 0, 249, 187, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 237, 0, 0, 0, 305,
	306, 307, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 207, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 666, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 237, 0, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 207, 0, 0, 0, 267, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	0, 0, 666, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	0, 0, 0, 0, 156, 272, 287, 165, 263, 300,
	170, 270, 161, 236, 259, 0, 0, 158, 285, 269,
	218, 201, 202, 157, 0, 254, 180, 193, 177, 234,
	0, 284, 312, 176, 303, 0, 295, 160, 0, 294,
	233, 281, 286, 219, 213, 159, 283, 217, 212, 205,
	184, 0, 197, 245, 211, 246, 198, 223, 222, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	206, 0, 0, 0, 313, 0, 257, 239, 0, 0,
	0, 255, 209, 282, 247, 288, 273, 296, 251, 248,
	152, 274, 179, 220, 162, 163, 175, 181, 183, 185,
	186, 229, 230, 242, 262, 275, 276, 277, 178, 171,
	256, 172, 195, 173, 153, 264, 174, 154, 243, 280,
	0, 191, 252, 216, 155, 215, 244, 279, 278, 304,
	310, 311, 315, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 309,
	189, 150, 292, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 308, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 200, 241, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 290, 302, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 317, 225, 226,
	227, 228, 192, 0, 169, 320, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 188,
	194, 0, 196, 168, 240, 190, 299, 203, 0, 232,
	199, 265, 204, 210, 253, 298, 238, 258, 166, 289,
	266, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 208, 0, 249, 187, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 237, 0, 0, 0, 305, 306, 307,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 207, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 950, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 0, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 237, 951, 0, 0, 305, 306, 307, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	1388, 0, 207, 0, 0, 0, 267, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	666, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 272, 287, 165, 263, 300, 170, 270,
	161, 236, 259, 0, 0, 158, 285, 269, 218, 201,
	202, 157, 0, 254, 180, 193, 177, 234, 0, 284,
	312, 176, 303, 0, 295, 160, 0, 294, 233, 281,
	286, 219, 213, 159, 283, 217, 212, 205, 184, 0,
	197, 245, 211, 246, 198, 223, 222, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 206, 0,
	0, 0, 313, 0, 257, 239, 0, 0, 0, 255,
	209, 282, 247, 288, 273, 296, 251, 248, 152, 274,
	179, 220, 162, 163, 175, 181, 183, 185, 186, 229,
	230, 242, 262, 275, 276, 277, 178, 171, 256, 172,
	195, 173, 153, 264, 174, 154, 243, 280, 0, 191,
	252, 216, 155, 215, 244, 279, 278, 304, 310, 311,
	315, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 309, 189, 150,
	292, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 308, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 200, 241, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	290, 302, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 317, 225, 226, 227, 228,
	192, 0, 169, 320, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 188, 194, 0,
	196, 168, 240, 190, 299, 203, 0, 232, 199, 265,
	204, 210, 253, 298, 238, 258, 166, 289, 266, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 208, 0, 249, 187, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 237, 0, 0, 0, 305, 306, 307, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 207, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 785, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 192,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 267, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2099, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 272, 287, 165, 263, 300, 170, 270, 161, 236,
	259, 0, 0, 158, 285, 269, 218, 201, 202, 157,
	0, 254, 180, 193, 177, 234, 0, 284, 312, 176,
	303, 0, 295, 160, 0, 294, 233, 281, 286, 219,
	213, 159, 283, 217, 212, 205, 184, 0, 197, 245,
	211, 246, 198, 223, 222, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 206, 0, 0, 0,
	313, 0, 257, 239, 0, 0, 0, 255, 209, 282,
	247, 288, 273, 296, 251, 248, 152, 274, 179, 220,
	162, 163, 175, 181, 183, 185, 186, 229, 230, 242,
	262, 275, 276, 277, 178, 171, 256, 172, 195, 173,
	153, 264, 174, 154, 243, 280, 0, 191, 252, 216,
	155, 215, 244, 279, 278, 304, 310, 311, 315, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 309, 189, 150, 292, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	308, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 200, 241, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 290, 302,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 317, 225, 226, 227, 228, 192, 0,
	169, 320, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 188, 194, 0, 196, 168,
	240, 190, 299, 203, 0, 232, 199, 265, 204, 210,
	253, 298, 238, 258, 166, 289, 266, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 208,
	0, 249, 187, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 237,
	0, 0, 0, 305, 306, 307, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 207,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 237, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 267, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	0, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 0, 284, 312, 176, 303, 0,
	295, 160, 0, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 0, 197, 245, 211, 246,
	198, 223, 222, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 206, 0, 0, 0, 313, 0,
	257, 239, 0, 0, 0, 255, 209, 282, 247, 288,
	273, 296, 251, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 0, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 309, 189, 150, 292, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 308, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 200,
	241, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 290, 302, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 317, 225, 226, 227, 228, 192, 0, 169, 320,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 0, 232, 199, 265, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 208, 0, 249,
	187, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 237, 0, 0,
	0, 305, 306, 307, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 207, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 666, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 0, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	317, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 237, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	267, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 0, 0, 1622, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 272, 287, 165,
	263, 300, 170, 270, 161, 236, 259, 0, 0, 158,
	285, 269, 218, 201, 202, 157, 0, 254, 180, 193,
	177, 234, 0, 284, 312, 176, 303, 0, 295, 160,
	0, 294, 233, 281, 286, 219, 213, 159, 283, 217,
	212, 205, 184, 0, 197, 245, 211, 246, 198, 223,
	222, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 206, 0, 0, 0, 313, 0, 257, 239,
	0, 0, 0, 255, 209, 282, 247, 288, 273, 296,
	251, 248, 152, 274, 179, 220, 162, 163, 175, 181,
	183, 185, 186, 229, 230, 242, 262, 275, 276, 277,
	178, 171, 256, 172, 195, 173, 153, 264, 174, 154,
	243, 280, 0, 191, 252, 216, 155, 215, 244, 279,
	278, 304, 310, 311, 315, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 309, 189, 150, 292, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 308, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 200, 241, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 290, 302, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 317,
	225, 226, 227, 228, 192, 0, 169, 320, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 188, 194, 0, 196, 168, 240, 190, 299, 203,
	0, 232, 199, 265, 204, 210, 253, 298, 238, 258,
	166, 289, 266, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 208, 0, 249, 187, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 237, 0, 0, 0, 305,
	306, 307, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 207, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 237, 0, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 207, 0, 0, 0, 267, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	0, 0, 1401, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 272, 287, 165, 263, 300,
	170, 270, 161, 236, 259, 0, 0, 158, 285, 269,
	218, 201, 202, 157, 0, 254, 180, 193, 177, 234,
	0, 284, 312, 176, 303, 0, 295, 160, 0, 294,
	233, 281, 286, 219, 213, 159, 283, 217, 212, 205,
	184, 0, 197, 245, 211, 246, 198, 223, 222, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	206, 0, 0, 0, 313, 0, 257, 239, 0, 0,
	0, 255, 209, 282, 247, 288, 273, 296, 251, 248,
	152, 274, 179, 220, 162, 163, 175, 181, 183, 185,
	186, 229, 230, 242, 262, 275, 276, 277, 178, 171,
	256, 172, 195, 173, 153, 264, 174, 154, 243, 280,
	0, 191, 252, 216, 155, 215, 244, 279, 278, 304,
	310, 311, 315, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 309,
	189, 150, 292, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 308, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 200, 241, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 290, 302, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 317, 225, 226,
	227, 228, 192, 0, 169, 320, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 188,
	194, 0, 196, 168, 240, 190, 299, 203, 0, 232,
	199, 265, 204, 210, 253, 298, 238, 258, 166, 289,
	266, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 208, 0, 249, 187, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 0, 1327, 0, 0, 305, 306, 307,
	291, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 207, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 192,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 267, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 272, 287, 165, 263, 300, 170, 270, 161, 236,
	259, 0, 0, 158, 285, 269, 218, 201, 202, 157,
	0, 254, 180, 193, 177, 234, 0, 284, 312, 176,
	303, 0, 295, 160, 0, 294, 233, 281, 286, 219,
	213, 159, 283, 217, 212, 205, 184, 0, 197, 245,
	211, 246, 198, 223, 222, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 1310,
	0, 0, 0, 271, 0, 0, 206, 0, 0, 0,
	313, 0, 257, 239, 0, 0, 0, 255, 209, 282,
	247, 288, 273, 296, 251, 248, 152, 274, 179, 220,
	162, 163, 175, 181, 183, 185, 186, 229, 230, 242,
	262, 275, 276, 277, 178, 171, 256, 172, 195, 173,
	153, 264, 174, 154, 243, 280, 0, 191, 252, 216,
	155, 215, 244, 279, 278, 304, 310, 311, 315, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 309, 189, 150, 292, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	308, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 200, 241, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 290, 302,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 317, 225, 226, 227, 228, 192, 0,
	169, 320, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 188, 194, 0, 196, 168,
	240, 190, 299, 203, 0, 232, 199, 265, 204, 210,
	253, 298, 238, 258, 166, 289, 266, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 208,
	0, 249, 187, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 237,
	0, 0, 0, 305, 306, 307, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 207,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 237, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 267, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	0, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 0, 284, 312, 176, 303, 0,
	295, 160, 0, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 0, 197, 245, 211, 246,
	198, 223, 222, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 206, 0, 0, 0, 313, 0,
	257, 239, 0, 0, 0, 255, 209, 282, 247, 288,
	273, 296, 346, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 0, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 309, 189, 150, 292, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 308, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 200,
	241, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 290, 302, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 293, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 317, 225, 226, 227, 228, 192, 0, 169, 320,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 0, 232, 199, 265, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 208, 0, 249,
	187, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 237, 0, 0,
	0, 305, 306, 307, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 182, 0, 0, 207, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 0, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	317, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 237, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	267, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 272, 287, 165,
	263, 300, 170, 270, 161, 236, 259, 0, 0, 158,
	285, 269, 218, 201, 202, 157, 0, 254, 180, 193,
	177, 234, 0, 284, 312, 176, 303, 0, 295, 160,
	0, 294, 233, 281, 286, 219, 213, 159, 283, 217,
	212, 205, 184, 0, 197, 245, 211, 246, 198, 223,
	222, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 206, 0, 0, 0, 313, 0, 257, 239,
	0, 0, 0, 255, 209, 282, 247, 288, 273, 296,
	251, 248, 152, 274, 179, 220, 162, 163, 175, 181,
	183, 185, 186, 229, 230, 242, 262, 275, 276, 277,
	178, 171, 256, 172, 195, 173, 153, 264, 174, 154,
	243, 280, 0, 191, 252, 216, 155, 215, 244, 279,
	278, 304, 310, 311, 315, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 309, 189, 150, 292, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 308, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 200, 241, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 290, 302, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 317,
	225, 226, 227, 228, 192, 0, 169, 320, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 188, 194, 0, 196, 168, 240, 190, 299, 203,
	0, 232, 199, 265, 204, 210, 253, 298, 238, 258,
	166, 289, 266, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 208, 0, 249, 187, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 237, 0, 0, 0, 305,
	306, 307, 291, 0, 0, 0, 0, 1369, 0, 0,
	0, 0, 182, 0, 0, 207, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	905, 906, 907, 1371, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 237,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 182, 0, 0, 207,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 905, 906, 907, 1371, 0, 0,
	0, 164, 151, 0, 208, 0, 249, 187, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 237, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	182, 0, 0, 207, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 906,
	907, 0, 0, 0, 0, 164, 151, 0, 208, 0,
	249, 187, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 0, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	996, 997, 998, 995, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 1450, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	30, 95, 77, 0, 1446, 0, 0, 1443, 0, 0,
	0, 1445, 1442, 1444, 1448, 1449, 0, 421, 100, 1447,
	0, 1826, 0, 0, 0, 89, 0, 0, 0, 0,
	151, 69, 208, 0, 249, 187, 0, 0, 0, 1846,
	1850, 1852, 1854, 1856, 1857, 1859, 57, 1863, 1860, 1861,
	1862, 0, 102, 1841, 1842, 1843, 1844, 1824, 1825, 1847,
	0, 1827, 0, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1839, 1845, 446, 305, 306, 307, 291,
	0, 0, 1849, 1851, 1853, 1855, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	96, 97, 0, 98, 99, 0, 0, 0, 0, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1453, 1454, 1455, 1456, 1457, 1458, 1451, 1452, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 76, 94, 103,
	433, 55, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 93, 88, 87,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 2478, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 90, 91, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 366, 0,
	365, 372, 362, 0, 0, 65, 0, 0, 0, 92,
	441, 66, 369, 370, 0, 371, 375, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 2139, 0, 436, 0, 0, 0, 0, 0, 366,
	0, 365, 372, 362, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 384, 371, 375, 385, 0,
	357, 0, 0, 67, 437, 442, 0, 0, 0, 0,
	380, 0, 68, 0, 0, 0, 430, 0, 432, 445,
	2042, 0, 0, 429, 427, 426, 0, 431, 0, 443,
	444, 2046, 0, 0, 0, 0, 384, 0, 0, 385,
	0, 439, 440, 0, 0, 0, 0, 2042, 31, 0,
	0, 2035, 0, 0, 0, 2037, 2039, 2041, 2046, 2043,
	2044, 2045, 2047, 2048, 2049, 2051, 2052, 2053, 2054, 0,
	2042, 0, 0, 0, 0, 0, 0, 434, 2035, 0,
	78, 2046, 2037, 2039, 2041, 0, 2043, 2044, 2045, 2047,
	2048, 2049, 2051, 2052, 2053, 2054, 0, 0, 2057, 0,
	0, 2035, 0, 0, 0, 2037, 2039, 2041, 0, 2043,
	2044, 2045, 2047, 2048, 2049, 2051, 2052, 2053, 2054, 0,
	0, 0, 0, 0, 0, 2057, 0, 358, 360, 359,
	0, 0, 0, 2055, 0, 364, 0, 0, 0, 0,
	0, 366, 0, 365, 372, 362, 0, 368, 2057, 0,
	2034, 0, 0, 0, 383, 369, 370, 0, 371, 375,
	2055, 361, 357, 0, 0, 352, 0, 0, 358, 360,
	359, 0, 380, 0, 0, 0, 364, 2034, 2050, 0,
	0, 0, 0, 2055, 0, 2040, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	2034, 0, 361, 0, 0, 2050, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	367, 373, 0, 374, 376, 0, 0, 377, 378, 379,
	0, 0, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 367, 373, 0, 374, 376, 0, 0, 377, 378,
	379, 0, 0, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 360, 359, 0, 0, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 367, 373, 0, 374, 376, 0, 0,
	377, 378, 379, 0, 0, 381, 382,
}

var yyPact = [...]int{
	22558, -1000, -308, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20465, 20465, -1000, -1000, 1723, -1000, 8239, 20934, 106, 20934,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 320, -1000, 19996, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 271, 22858, 190, 188, -295,
	-1000, 2025, -1000, -1000, -1000, -1000, 156, 348, 19527, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22561, 45, 348, 425, 432, 702, 702,
	9646, 2025, 203, 32, -1000, 763, 22558, 239, 20934, -1000,
	853, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 239, -1000, -1000, -1000, 2025, 2025, 20934, -45, 1038,
	-1000, 207, 292, 194, 835, -1000, -1000, -1000, -1000, -1000,
	2100, -1000, 20934, 1828, 20934, -1000, 1342, 220, 22899, 1936,
	1006, 367, 1839, -1000, -1000, 1821, -1000, 57, 27, 89,
	129, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 109, -1000,
	2003, -1000, -1000, 46, -1000, -1000, 35, -1000, -1000, -1000,
	-90, -1000, -1000, -1000, -1000, -1000, -167, -167, 822, -1000,
	1820, 1924, 2024, 1602, 2061, 1996, 1994, 1990, 1988, 16,
	266, 266, 266, 293, 266, 315, -1000, -1000, -1000, -1000,
	-1000, -1000, 355, -1000, -1000, -1000, -1000, 660, 20934, -1000,
	1633, 2019, 229, 880, 223, 225, 2024, 2024, -100, -118,
	880, 880, -118, 73, -1000, -1000, -1000, 1055, 208, 1055,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1993, 1986, 271,
	271, 277, -1000, -191, -1000, -1000, 433, -1000, 394, -1000,
	1342, 218, 217, 693, 985, -1000, 1023, 20934, 20934, 20934,
	1023, 1023, 12015, 11546, 832, -1000, 2024, 1602, -1000, 1536,
	1664, 1602, 271, 271, 271, 271, 271, 271, 271, 20934,
	5826, 5826, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	214, 1819, -1000, 20934, 213, 2024, 1924, 2024, -1000, 831,
	1301, 1458, -1000, -1000, 207, 949, -1000, 701, -1000, -1000,
	-1000, -1000, 20934, 202, -1000, 1448, 1817, -1000, 362, 813,
	910, -1000, 68, 23061, 16705, 1342, 16705, 20934, -1000, -1000,
	-1000, -1000, -1000, -1000, -102, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -53, -1000,
	-53, 2024, -295, 4858, -1000, -298, 1924, 6307, -1000, -1000,
	6307, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 295,
	266, -1000, 1464, 1073, 16705, 1342, 1332, 20934, 266, 277,
	-1000, 20934, 660, 1979, 20934, 16705, 1055, 2069, 7750, 1055,
	-1000, -1000, -1000, 880, 880, -1000, -1000, -1000, -1000, 1055,
	1055, -1000, -1000, -111, 2069, 2069, -97, 20934, 20934, 266,
	20934, -1000, -1000, -1000, -1000, 20934, -1000, -1000, 1464, 16705,
	13891, -1000, -144, 420, 399, 407, -1000, -1000, 311, 310,
	11077, 260, 16705, 3896, -1000, -1000, 1023, 1023, 1023, 3896,
	3896, 704, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20934,
	1924, -1000, -1000, -1000, -1000, 1464, 16705, 1342, 20934, 20934,
	20934, 22151, -1000, 803, -1000, -1000, 9177, 824, 6307, -1000,
	1097, 1816, -1000, -1000, 1811, 1810, 1806, 1805, 1803, 1798,
	1797, -1000, 1577, -1000, -1000, 1793, 1792, 1780, 1778, -1000,
	-1000, -1000, -1000, -1000, -1000, 1772, -1000, -1000, -1000, 1771,
	1577, -1000, -1000, 1770, 1769, 1767, 1766, 1762, -1000, -1000,
	-1000, 1457, -1000, -1000, -1000, 1455, 1454, 1758, 1223, -1000,
	-1000, -1000, -1000, 3415, 7750, 7750, 7750, 7750, -1000, -1000,
	1685, 6307, 1757, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7269, -1000, 1754, 1744, 1736, 1732, 1731, 1577, 1729, 1726,
	1722, 7750, 1721, 1719, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 803, -1000, -296, -1000,
	10608, 20934, 20934, -1000, -1000, -296, -1000, 10127, 20934, 1924,
	-1000, 1924, 2491, -1000, 2018, -1000, 207, 126, -1000, -1000,
	-1000, -1000, -1000, -1000, 801, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 488, -1000, 20934, -1000, -1000, 68,
	16705, 1002, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 78,
	-1000, -1000, 123, -1000, 284, -17, 937, -1000, -1000, 17,
	120, 17, -1000, -1000, 915, -1000, 1297, -1000, 799, 1451,
	-1000, 776, 486, -1000, 1270, 19058, 20934, 3, -1000, 1934,
	762, -1000, -17, 451, 1796, -1000, -1000, -1000, 1901, 20934,
	18589, -1000, 1715, 911, -1000, 1765, 20934, -1000, 6307, -1000,
	20934, 2069, 2069, 880, 22151, 1055, 20934, 1055, -1000, -1000,
	1055, -1000, 793, -1000, 20934, -1000, -1000, -1000, -1000, 3,
	762, 1940, 749, -1000, -1000, -1000, -1000, 1965, 21403, 21403,
	203, 1714, -1000, -1000, 410, 385, 430, -1000, -1000, 280,
	-1000, -1000, 451, -1000, -1000, -1000, 1713, 1033, -1000, -1000,
	7750, -1000, 3896, 3896, 3896, -1000, -1000, 14360, -1000, -1000,
	-1000, 485, 451, 1838, 478, -1000, 478, -1000, -1000, -1000,
	2069, 5826, -1000, 13891, -1000, 6307, 6307, 6307, 6307, -1000,
	18112, -1000, 17643, -1000, 326, 6788, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6307, 1983, 1983, 1983, 6307, 1090, 6307,
	6307, -1000, 1150, 1739, 1983, 1983, 1983, 1983, 1983, -1000,
	2926, 1983, 1983, 1983, 1983, -1000, -1000, -1000, 6307, 7750,
	7750, 7750, 7750, 7750, 7750, 7750, 7750, 7750, 7750, 7750,
	7750, 1680, 1050, 7750, 7750, 7750, 1664, 1891, 473, -1000,
	-1000, -1000, -1000, -1000, 918, 1297, 6307, 22273, 6307, 6307,
	6307, -1000, 1535, 1534, -1000, -1000, 6307, 6307, 7750, -1000,
	1983, 1449, 2069, 453, -1000, 1712, -1000, 908, 1893, -1000,
	785, 472, -1000, 1032, 887, -1000, 453, 885, 1879, 472,
	-1000, -1000, -1000, 779, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-48, -1000, -1000, 20934, 1448, 884, 1002, 465, -1000, 276,
	778, 774, -1000, 16705, 50, 16705, -1000, 16705, -1000, -1000,
	206, -1000, 20934, 1921, -1000, -1000, -1000, 1430, 1910, 4858,
	-1000, 20934, -137, 6307, 6307, 6307, -1000, -1000, -1000, 1633,
	1071, 1696, -76, 947, -1000, 416, 16705, 205, -1000, 1833,
	157, -1000, 1901, -1000, 644, -1000, 1686, 20934, 769, -1000,
	771, 22558, -1000, 20934, -1000, 1342, 880, 1297, 2069, -1000,
	-1000, 2069, -1000, 880, -1000, 880, 1055, 20934, -1000, -76,
	416, 20934, 13891, 13891, 13891, 13891, -1000, 1868, 1854, -1000,
	1871, 1870, 1894, 20934, 13891, 20934, -1000, -1000, -1000, 21777,
	-1000, -1000, -1000, -1000, -1000, 1531, 2025, 17174, -1000, -1000,
	-1000, 368, 16705, 1428, 260, -1000, -1000, -1000, -1000, -1000,
	20934, 20934, 2067, -1000, 470, 1950, -1000, 1083, 1083, 1076,
	-1000, -1000, 764, -1000, -1000, 329, -1000, -1000, -1000, -1000,
	1685, -1000, -1000, -1000, 1529, 449, 1297, 6307, -1000, -1000,
	6307, 6307, 1236, 6307, 1527, 873, 867, -1000, 1526, 2099,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6307,
	6307, 6307, 6307, 6307, 1211, 5345, -1000, -1000, -1000, 6307,
	6307, 6307, 6307, 1521, 1589, 1533, -1000, 1031, 1031, 782,
	782, 782, 782, 782, 973, 973, -1000, -1000, -1000, 3415,
	1680, 7750, 7750, 7750, 249, 2274, 1391, -1000, 6307, 1060,
	-1000, 6307, 727, -1000, 1520, 1232, 1519, 1515, -1000, -1000,
	700, 1513, 913, 6307, 466, 2067, -296, 4858, 221, 20934,
	-296, 20934, 20934, 4858, -1000, 20934, 219, -296, 2491, 1293,
	-1000, -1000, -1000, 2079, 16705, 1342, 869, 919, -1000, 31,
	-1000, 72, 304, 1422, -1000, 306, 1026, 303, -1000, 751,
	-79, -59, 1297, 1297, -1000, 1964, 1929, 8708, 1208, -1000,
	-1000, 1420, -1000, 275, -1000, -1000, -1000, 350, 36, 1292,
	291, -1000, 1463, 20934, -1000, -1000, -1000, -1000, -1000, 947,
	947, 947, 8708, 239, 689, 747, 13891, 20934, -1000, 15767,
	1511, -1000, 451, 2069, -1000, -1000, 2069, 2069, 880, -1000,
	1208, 275, 761, -1000, 1024, 1826, 1832, 1826, -1000, -1000,
	-1000, -1000, 1853, -1000, 1852, -1000, -1000, 761, -1000, 1633,
	-1000, -1000, 865, 859, -1000, 465, 1510, -1000, -1000, -1000,
	-1000, 2065, 2060, 16236, -1000, -1000, -1000, -1000, -1000, -1000,
	6307, 1878, 1864, 1808, 1089, 854, -1000, -1000, -1000, -1000,
	6307, 1789, 1776, 1763, 1759, 1750, -1000, 6307, 6307, 1202,
	1717, 1678, 1669, 1665, -1000, 851, -1000, 249, 2274, 989,
	-1000, 7750, 7750, 1658, 1047, -1000, 6307, 1040, 398, 12953,
	-1000, 6307, -1000, -1000, -1000, 12953, -1000, 7750, 1629, 1419,
	2065, -1000, 1508, 462, -296, -1000, -1000, 453, -1000, -1000,
	-1000, -1000, -296, -1000, 453, -1000, -1000, -1000, -1000, -1000,
	1342, -1000, 70, -1000, -1000, -1000, -1000, -1000, -1000, -32,
	-1000, 20934, 1412, 20934, 20934, -300, -55, 2058, 2057, 203,
	20934, 1507, 459, -1000, -1000, -1000, 22464, 672, -1000, 20934,
	1119, 627, 266, 627, 1104, 1675, -1000, -1000, -1000, 1410,
	-20, -1000, -1000, 1409, 1408, 1288, -1000, -1000, 1333, 834,
	-9, -1000, -1000, -1000, -1000, -1000, -1000, 1674, 12953, 13422,
	1404, 1506, 21403, 13891, 15767, 725, -1000, 739, -1000, -1000,
	-1000, -1000, -1000, 2069, -1000, -1000, 2063, 20934, 4858, -1000,
	-1000, 6307, 1668, -1000, 6307, -1000, -1000, -1000, -1000, -1000,
	-1000, 1403, -1000, 1392, -1000, -1000, 6307, 6307, -1000, -1000,
	1297, -1000, -1000, -1000, 1505, -1000, 384, 384, 18, -1000,
	-1000, -1000, 1610, -1000, 1636, 1636, 1610, 1610, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1662, 1651, -1000,
	-1000, 1610, 1634, 1634, 1610, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1637, 1637, 1649, 1637, -1000, 1575, -1000, -1000, -1000, -1000,
	-1000, 1453, 1407, 6307, -1000, -1000, -1000, -1000, -1000, -1000,
	7750, -1000, -1000, -1000, -1000, 1297, 6307, 1504, -1000, 1610,
	1636, -1000, 1610, 1634, 1610, 384, 384, 1502, 1207, 1501,
	2213, -1000, 1498, -1000, -1000, 453, 453, 451, -1000, -1000,
	-97, 53, -97, -302, 1390, -1000, 2055, 1382, 1320, -1000,
	1633, 22793, 8708, 886, -1000, -1000, 20934, 20934, -1000, 20934,
	20934, 266, 6307, -1000, -1000, 185, -1000, -1000, 80, -1000,
	-1000, 1321, 335, -1000, 15298, -1000, -1000, -1000, -1000, -1000,
	-53, 2069, 725, 739, -1000, -1000, 866, -1000, 2024, -1000,
	-1000, 1297, 20934, 1297, 848, 838, 1297, 449, -1000, -1000,
	-1000, -1000, -1000, 9, -1000, -1000, -1000, -1000, 1276, -1000,
	1274, -1000, -1000, -1000, 1375, 1375, -1000, -1000, 1255, -1000,
	-1000, -1000, 1254, -1000, -1000, 1238, -1000, -1000, -1000, -1000,
	1398, -1000, 1297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6307, -1000, -1000, -1000, -1000, -81, -68,
	-1000, 1372, -1000, -304, 1237, -1000, 1369, -58, -1000, -1000,
	1939, 238, 22770, -1000, 947, 947, 444, 947, 947, 947,
	947, 182, 181, 947, 947, 947, 947, 947, 947, 947,
	947, 947, 947, 947, 947, 947, 947, 1631, -1000, -1000,
	886, -1000, -1000, 1127, 7750, -1000, -1000, 1366, 13422, 503,
	499, 1628, -1000, 154, 2106, 1103, 1096, -1000, 20934, -1000,
	1627, 1666, 114, 1624, -1000, 1620, 1615, 20934, 1328, 294,
	1365, -1000, -1000, 77, -1000, -1000, 837, -1000, 1610, 6307,
	-1000, -97, 2063, -1000, -1000, 833, -1000, 1140, -1000, 1132,
	-1000, -1000, 1497, 1495, 820, -1000, 817, 1494, 811, 808,
	-1000, 1317, 273, -67, -68, -1000, 2054, -60, 2052, 2051,
	999, -1000, 1605, -1000, -1000, 2048, 203, -1000, 2034, 22793,
	-1000, 1234, 1230, 947, 947, 1229, 1364, 1363, 1361, 947,
	947, 1212, 1360, 21777, 1210, 1182, 1180, 1275, 1357, 515,
	1243, 1235, 1233, 20934, 1604, 1319, -1000, -1000, 2274, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1166, 1596, -164, -1000, -1000, 1595, 15298, 227, 227, 15298,
	15298, 15298, 1580, 323, -1000, -33, -1000, -1000, -1000, 15298,
	1948, 1282, -1000, 2024, -1000, 1479, 1473, 1472, 1471, -1000,
	-1000, -1000, 1354, -1000, -1000, -1000, 1157, -1000, 1154, -1000,
	1579, 1153, -55, 2033, -1000, 1320, 2032, 1320, 1320, 1351,
	20934, 1320, -1000, 145, -1000, -1000, -1000, 12953, 12953, -1000,
	-1000, -1000, -1000, 1340, 1327, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 204, 20934, 806,
	-1000, 977, 1469, 6307, 1577, -230, 15298, 802, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 797, 789, 787, 15298, -1000,
	-1000, -1000, 151, -1000, 136, -1000, -1000, 1948, -1000, -1000,
	-1000, -1000, -1000, -1000, 1468, 1467, 1952, 12484, -84, -1000,
	1325, -1000, 1320, -1000, -1000, -317, 775, -1000, -1000, 128,
	224, 209, -1000, 299, -1000, -1000, -1000, -1000, -1000, -1000,
	198, 768, -1000, 1319, 1310, -1000, 1105, -1000, 1720, -1000,
	41, 744, -1000, -1000, -1000, -1000, 728, -1000, -1000, 947,
	1309, 93, -1000, -1000, -1000, -1000, -1000, -1000, 20934, -1000,
	722, -1000, -1000, -1000, 730, -1000, -1000, -1000, -1000, -1000,
	-1000, 20934, 124, 1149, 7750, 1574, 7750, 1573, 140, 1565,
	-1000, -1000, -1000, -1000, -1000, 323, -1000, 1681, 1578, 2098,
	-1000, -1000, -1000, -1000, 136, 136, 136, 136, 26, 1134,
	-1000, 1332, 437, -1000, 917, -1000, 14829, 20934, -1000, 1546,
	2026, -1000, 1944, 20934, 1794, 20934, 1544, 905, 7750, -1000,
	-1000, 2105, -1000, 2103, 471, 471, -1000, -1000, -1000, 20934,
	4377, -1000, 445, -1000, 230, 131, -1000, 720, -1000, 696,
	20934, 1108, 1434, -1000, -1000, -1000, 1151, 160, -1000, -1000,
	-1000, 1297, 20934, 688, -1000, 1462, 119, -1000, -1000, 682,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 230, 1876, -1000,
	1101, -1000, -1000, 22743, 361, -1000, -1000, 22743, 121, -1000,
	234, 1538, -1000, -1000, 677, -1000, 1336, 477, 6307, -1000,
	121, 22793, -1000, 6307, 668, -1000, 22793, 655, -1000, -1000,
}

var yyPgo = [...]int{
	0, 129, 2456, 187, 125, 123, 183, 2455, 1989, 1977,
	2454, 2452, 2450, 2449, 2447, 2446, 2444, 2440, 2439, 2438,
	2436, 2435, 2434, 2433, 2432, 2431, 2430, 181, 2429, 2428,
	2420, 2419, 2415, 2412, 2411, 2410, 2404, 2403, 2402, 2400,
	2399, 2398, 2384, 2381, 121, 2380, 1976, 2379, 2378, 2377,
	2376, 2375, 173, 2374, 2373, 2370, 2369, 2368, 2367, 2362,
	2361, 2360, 2359, 2358, 2357, 2355, 2354, 127, 2353, 2352,
	176, 179, 59, 2351, 45, 62, 146, 202, 245, 200,
	208, 139, 71, 130, 170, 114, 2350, 2038, 111, 2349,
	26, 132, 2348, 106, 42, 36, 188, 115, 55, 65,
	91, 2347, 167, 85, 2346, 2343, 94, 2342, 60, 2341,
	74, 49, 88, 27, 2340, 2339, 2338, 77, 2322, 2321,
	2320, 2319, 82, 2317, 64, 52, 2316, 2315, 2313, 2312,
	2311, 34, 2310, 47, 2309, 2307, 2306, 2305, 2304, 2301,
	2300, 11, 17, 21, 2299, 14, 2, 2298, 164, 84,
	72, 103, 2297, 405, 2295, 2294, 2293, 112, 2292, 152,
	2291, 2290, 2288, 2287, 2286, 10, 2285, 53, 2284, 2283,
	2282, 56, 151, 154, 2281, 2276, 98, 50, 51, 92,
	2275, 2274, 70, 160, 16, 41, 0, 147, 43, 2271,
	2270, 2268, 207, 161, 153, 177, 100, 292, 117, 2267,
	2266, 48, 2265, 120, 2264, 68, 8, 2263, 90, 2262,
	143, 83, 2261, 107, 2260, 149, 1, 108, 28, 165,
	2259, 2257, 2255, 133, 2254, 2251, 73, 131, 2249, 2248,
	2247, 25, 2246, 29, 20, 2245, 86, 2244, 182, 2242,
	148, 95, 135, 134, 110, 168, 172, 67, 113, 1146,
	99, 76, 19, 2241, 175, 2237, 199, 189, 140, 2236,
	185, 353, 163, 2235, 137, 7, 2234, 2233, 9, 2232,
	23, 2230, 2228, 2226, 2225, 6, 2224, 2223, 2221, 4,
	3, 2220, 5, 104, 44, 66, 2218, 61, 78, 2214,
	2213, 2211, 2210, 2209, 206, 2208, 2207, 2206, 2205, 2203,
	2198, 2194, 2193, 96, 39, 2189, 2188, 2186, 2185, 102,
	93, 2184, 313, 156, 2163, 33, 2162, 2161, 24, 2160,
	35, 2159, 2156, 2155, 15, 136, 2154, 2153, 18, 2152,
	2151, 12, 13, 2150, 2149, 57, 46, 30, 69, 75,
	2148, 22, 162, 105, 2146, 2144, 138, 2141, 97, 2140,
	118, 174, 287, 2139, 159, 2138, 2137, 2136, 2135, 2133,
	2132, 2131, 1175, 2130, 2129, 180, 54, 166, 2127, 2126,
	141, 2125, 116, 89, 87, 157, 2124, 142, 2123, 2122,
	171, 145, 2121, 2120,
}

//line mysql_sql.y:7677
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 378, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 61, 60, 334,
	334, 333, 333, 332, 332, 331, 331, 331, 330, 330,
	330, 329, 329, 328, 328, 327, 327, 325, 325, 326,
	324, 323, 323, 323, 321, 321, 319, 319, 320, 320,
	314, 314, 317, 317, 315, 315, 315, 315, 318, 313,
	313, 313, 312, 312, 59, 59, 59, 251, 251, 58,
	58, 264, 264, 264, 264, 264, 262, 262, 262, 262,
	262, 262, 261, 261, 260, 260, 265, 265, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 53, 53,
	53, 53, 56, 56, 56, 57, 259, 259, 259, 54,
	55, 55, 250, 250, 255, 255, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 258, 258,
	258, 257, 257, 256, 256, 47, 47, 47, 50, 49,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 48,
	48, 48, 48, 48, 48, 45, 45, 45, 45, 45,
	44, 44, 46, 46, 248, 248, 247, 64, 64, 64,
	64, 64, 64, 64, 63, 63, 66, 66, 65, 52,
	52, 52, 52, 52, 51, 51, 51, 51, 51, 51,
	51, 51, 51, 357, 357, 357, 359, 359, 190, 191,
	379, 189, 189, 189, 353, 353, 354, 355, 356, 356,
	356, 62, 7, 7, 42, 43, 377, 377, 294, 294,
	203, 203, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 297, 298,
	199, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 33, 33, 237, 237, 32, 380,
	380, 173, 173, 31, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 41, 308, 308, 382, 382, 382, 39,
	40, 293, 293, 293, 37, 36, 35, 34, 34, 30,
	30, 29, 29, 196, 196, 198, 198, 194, 381, 381,
	270, 270, 197, 197, 28, 28, 28, 195, 195, 172,
	193, 193, 193, 6, 10, 10, 10, 10, 10, 10,
	10, 10, 16, 18, 245, 245, 242, 17, 13, 12,
	15, 11, 14, 5, 5, 5, 5, 8, 8, 9,
	83, 83, 112, 112, 366, 366, 362, 362, 363, 363,
	363, 364, 364, 365, 365, 67, 302, 302, 302, 302,
	302, 302, 4, 301, 301, 301, 301, 301, 301, 342,
	342, 342, 343, 102, 102, 97, 97, 303, 303, 217,
	344, 344, 311, 311, 310, 310, 309, 309, 100, 100,
	101, 101, 87, 87, 71, 71, 316, 316, 316, 316,
	322, 322, 291, 291, 138, 138, 168, 168, 169, 169,
	75, 75, 76, 76, 76, 76, 76, 76, 350, 350,
	352, 352, 351, 99, 99, 95, 95, 96, 96, 96,
	94, 94, 93, 92, 92, 91, 90, 90, 90, 78,
	78, 77, 77, 77, 77, 77, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 79, 79,
	358, 358, 358, 295, 295, 295, 300, 300, 150, 150,
	151, 151, 149, 149, 80, 80, 81, 81, 81, 81,
	148, 148, 147, 82, 82, 88, 84, 84, 86, 86,
	86, 86, 158, 158, 157, 157, 157, 157, 68, 69,
	69, 70, 105, 105, 156, 155, 155, 155, 104, 104,
	103, 103, 98, 98, 85, 85, 85, 154, 89, 89,
	89, 89, 89, 89, 89, 89, 383, 383, 152, 182,
	182, 182, 188, 188, 181, 181, 181, 181, 181, 192,
	187, 187, 183, 183, 184, 184, 184, 3, 3, 3,
	3, 22, 22, 22, 22, 26, 26, 360, 360, 19,
	367, 370, 368, 371, 371, 371, 372, 372, 372, 373,
	373, 20, 369, 374, 374, 374, 246, 246, 243, 244,
	244, 241, 240, 240, 240, 376, 376, 375, 375, 375,
	185, 185, 21, 236, 236, 238, 239, 239, 230, 230,
	230, 230, 25, 234, 234, 235, 235, 235, 235, 235,
	231, 231, 233, 233, 229, 229, 229, 229, 229, 24,
	228, 228, 226, 226, 224, 224, 225, 225, 223, 223,
	223, 227, 227, 23, 23, 73, 72, 72, 72, 74,
	296, 296, 266, 266, 269, 269, 276, 276, 277, 277,
	275, 275, 282, 282, 281, 281, 280, 280, 279, 279,
	278, 278, 278, 278, 273, 273, 272, 272, 267, 267,
	267, 267, 267, 268, 268, 271, 271, 274, 274, 129,
	129, 130, 130, 130, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 340, 340, 341, 132, 132, 132, 136,
	136, 136, 136, 136, 136, 131, 131, 133, 133, 113,
	113, 111, 111, 106, 106, 107, 107, 108, 108, 109,
	109, 110, 110, 110, 110, 110, 110, 253, 253, 338,
	338, 339, 339, 335, 335, 335, 337, 337, 337, 337,
	337, 336, 336, 114, 166, 166, 166, 186, 186, 186,
	165, 165, 165, 128, 128, 127, 127, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 252, 252, 200, 200, 201, 201, 145, 144, 144,
	144, 144, 144, 142, 143, 141, 141, 141, 141, 141,
	140, 140, 139, 139, 139, 232, 232, 137, 137, 135,
	135, 135, 134, 134, 134, 283, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	209, 209, 214, 214, 349, 349, 348, 115, 115, 115,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 124,
	124, 124, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 307, 307, 307,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 164, 361, 361, 361, 345, 345, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 162, 162, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 218, 218, 219, 219, 304, 304, 304, 304,
	304, 304, 305, 305, 306, 306, 306, 306, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 207, 159, 159,
	159, 220, 215, 215, 216, 216, 210, 210, 210, 210,
	210, 210, 210, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 211, 211, 213, 213, 222, 222, 222,
	221, 221, 221, 221, 221, 221, 221, 126, 126, 126,
	126, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 117, 117, 117, 117, 121, 121, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 122, 122, 122, 122, 120, 120, 120, 120, 120,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 119, 167, 167, 284,
	284, 287, 287, 285, 285, 286, 288, 288, 288, 289,
	289, 289, 290, 290, 290, 292, 292, 171, 171, 171,
	178, 178, 170, 170, 179, 179, 180, 180, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 9, 9, 0,
	2, 1, 3, 3, 3, 1, 3, 5, 0, 2,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 0, 3, 3, 0, 3, 0, 3, 0, 3,
	0, 2, 1, 2, 3, 4, 3, 3, 1, 0,
	1, 1, 0, 1, 8, 5, 7, 0, 3, 8,
	5, 1, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 4, 1, 3, 1, 2,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 4, 6, 1, 1, 1, 2,
	4, 6, 1, 4, 1, 3, 3, 4, 4, 4,
	3, 3, 2, 4, 4, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 2, 4, 3, 1,
	1, 1, 1, 1, 2, 3, 4, 7, 2, 3,
	3, 4, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 1, 1, 1,
	1, 6, 1, 1, 7, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 5, 0, 2, 7, 0,
	1, 0, 1, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 6, 7, 4,
	4, 7, 8, 0, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 1, 3, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 3, 1, 4, 6, 4,
	4, 4, 3, 1, 1, 2, 2, 11, 8, 9,
	1, 3, 2, 4, 0, 2, 0, 1, 1, 1,
	1, 0, 1, 0, 1, 4, 2, 1, 5, 4,
	4, 2, 4, 2, 1, 5, 4, 4, 2, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 4, 1,
	3, 4, 0, 2, 1, 1, 2, 2, 0, 1,
	2, 4, 1, 3, 1, 4, 2, 3, 4, 6,
	8, 8, 4, 6, 8, 8, 0, 1, 2, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 11, 0, 1, 7,
	1, 4, 1, 3, 4, 3, 0, 1, 1, 0,
	2, 7, 1, 0, 2, 2, 1, 3, 2, 1,
	3, 2, 1, 3, 2, 0, 1, 3, 4, 3,
	1, 1, 4, 1, 3, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 5,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 10, 9, 2, 2, 6, 10, 5,
	0, 1, 0, 6, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 6, 5, 0, 3, 0, 1, 0,
	1, 1, 3, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 4, 1, 3, 3, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	1, 7, 7, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	4, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 5, 4, 4, 5, 5, 5, 5, 4,
	5, 5, 5, 5, 5, 5, 5, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 5, 4, 6,
	6, 7, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 4,
	2, 3, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -378, -2, -1, -3, -4, -67, -5, -6, -51,
	-63, -65, -66, -27, -7, -62, -44, -45, -47, -53,
	-58, -59, -60, -61, -68, -75, -22, -21, -20, -19,
	12, 420, -8, -9, -350, -10, -189, -190, -191, -379,
	-28, -29, -30, -34, -35, -36, -37, -39, -40, -41,
	-31, -32, -33, -43, -42, 203, -46, 58, -48, -49,
	-50, -54, -55, -56, -57, 317, 323, 375, 384, 43,
	-76, -78, -23, -24, -25, -26, 199, 14, 452, -11,
	-14, -12, -15, -13, -17, -18, -16, 221, 220, 37,
	283, 284, 321, 219, 200, 13, 132, 133, 135, 136,
	30, -77, 64, 201, -79, 10, 500, -87, 38, -111,
	-186, 67, -174, -177, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	299, 449, 238, 262, 265, 272, 132, 151, 145, 173,
	165, 140, 242, 243, 74, 135, 406, 84, 391, 372,
	138, 257, 259, 261, 264, 244, 161, 156, 256, 240,
	154, 245, 39, 246, 178, 247, 248, 454, 387, 298,
	393, 269, 370, 155, 388, 260, 390, 180, 184, 398,
	323, 149, 150, 395, 400, 177, 218, 42, 451, 230,
	401, 182, 176, 172, 409, 273, 271, 175, 148, 171,
	241, 47, 186, 185, 187, 366, 367, 368, 369, 249,
	250, 311, 397, 168, 157, 302, 141, 22, 404, 225,
	392, 324, 251, 266, 274, 181, 183, 232, 237, 453,
	374, 236, 270, 402, 153, 229, 258, 224, 405, 142,
	317, 326, 252, 136, 263, 399, 408, 46, 339, 147,
	139, 215, 133, 234, 239, 253, 254, 255, 276, 275,
	267, 169, 231, 174, 159, 146, 170, 134, 233, 407,
	340, 498, 300, 355, 167, 164, 235, 208, 403, 394,
	137, 359, 341, 162, 277, 495, 496, 497, 312, 297,
	278, 279, 160, 222, 386, 280, 282, 365, 290, 342,
	373, -87, -46, -9, -8, -77, -78, -193, 23, 370,
	-52, 371, 203, 64, -186, -5, -4, -67, -44, -75,
	-192, -186, 283, -192, 206, -186, 236, 354, -294, 211,
	-261, -236, 237, -260, -238, -263, -239, 31, 199, 201,
	200, 233, 14, 321, 207, 12, 10, 322, 219, 24,
	25, 27, 13, 323, 325, 28, 326, 329, 330, 331,
	41, 334, 335, 226, 67, 70, 244, 244, -69, -70,
	493, -93, -94, -153, 19, 6, 7, 8, 9, -296,
	299, 355, 236, -230, -228, 280, 332, 216, 215, 85,
	413, 205, -362, -363, 196, 197, 198, -352, 445, -351,
	-186, 26, 206, -38, -308, -293, 394, 393, -197, 392,
	385, 396, 387, 199, 446, -171, 342, 373, 232, 410,
	411, 319, 374, 398, 399, 388, 84, 166, 163, 299,
	355, -362, 137, 134, -249, 137, 90, 142, 141, -249,
	236, 354, 40, -255, 365, -254, -256, 398, 399, 409,
	68, 69, 397, -171, -186, 84, -94, -153, -93, -76,
	-78, -350, 299, 355, 236, 207, 206, 208, 413, 283,
	-295, -358, 31, -300, 193, 194, 195, 32, 33, -1,
	-100, 228, -111, 130, -100, -94, -93, -94, -165, -186,
	372, 100, -52, -52, 371, -353, -354, -355, -357, 203,
	371, 370, 130, 15, -192, 62, -111, -238, 236, -261,
	-236, 35, 61, 131, 209, 131, 61, 64, 319, 299,
	355, 320, 413, 206, 332, 208, 236, 333, 299, 355,
	206, 208, 413, 236, 299, 206, 208, 355, 236, 333,
	385, 386, 208, 26, 324, 327, 328, 386, -312, 409,
	-312, -94, 131, 64, -71, 38, -96, 21, -79, -78,
	20, 31, 32, 31, 32, 31, 32, 31, 32, -360,
	206, 445, -226, 211, -226, -226, 207, -226, 206, -364,
	144, 131, -352, -99, 64, 23, 234, -196, 108, -382,
	207, 395, 42, 235, 234, -95, -96, -95, 389, 386,
	-270, 390, 391, -197, -196, -196, -197, 206, 208, 413,
	-380, -381, 15, 110, 234, -380, 30, 30, -294, -294,
	-365, 210, 402, 452, 140, 141, 142, -238, 236, 236,
	131, 100, 23, -257, 100, 111, -256, -256, -256, -257,
	-257, -131, 40, -185, 127, -186, 70, -131, 40, 130,
	-95, -79, -78, 65, 65, -294, -294, -294, -294, -294,
	-294, -294, -192, -80, -81, 118, -210, -186, 91, 227,
	-212, 67, -205, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 84, 370,
	311, 159, 355, 162, 312, 160, 222, 365, -206, -208,
	-331, -325, -204, 64, 116, 117, 124, 92, -207, -283,
	35, 94, 421, -160, -161, -162, -163, -164, -326, -324,
	70, 75, 78, 81, 82, 80, 79, 158, 77, 71,
	129, -78, -345, -175, -299, -306, 205, -304, 163, 12,
	122, 127, -307, 491, 69, 68, 492, 305, 306, 307,
	413, 301, 308, 211, 52, 309, 310, 313, 420, 314,
	53, 315, 304, 226, 316, 179, 424, 423, 425, 417,
	414, 412, 415, 416, 418, 419, -80, -301, 43, -75,
	64, 30, 64, -186, -302, 43, -75, 64, 30, -95,
	-71, -96, 130, 75, 70, -52, 65, 131, -356, 81,
	82, -359, 177, 169, -186, -64, 70, -3, -4, -5,
	-6, -27, -44, -75, -327, -325, 64, 31, 364, 61,
	15, -262, 206, 413, 318, 232, 208, 299, -260, -245,
	-242, -240, -185, -238, -241, -240, -265, -165, 386, -72,
	376, -72, -95, -70, -310, -309, -210, 40, -186, 494,
	-71, -210, -92, -91, -210, 208, -226, -367, 67, 91,
	-246, -243, -240, -236, -184, 67, 68, 69, -186, -226,
	-365, -351, 34, -98, -186, -240, -380, -149, 16, -208,
	-381, -196, -196, -198, -381, -194, -381, 386, -149, -149,
	-270, -195, -186, -195, -226, -173, -172, -186, -173, -367,
	-246, -84, -82, -85, -86, -88, -152, -154, -89, -111,
	64, 492, 403, 404, 138, 141, 140, 31, 364, -259,
	364, 31, -236, -254, -250, 70, 365, -241, -258, 61,
	127, -309, -257, -257, -257, -258, -258, 126, -186, -71,
	-367, -245, -236, -186, -113, -111, -113, -187, -184, -177,
	-148, 131, -147, 15, -181, 90, 87, 88, 89, -186,
	34, 70, 130, -210, 107, -221, 100, 101, 102, 103,
	104, 105, 106, 64, 64, 64, 64, 64, 64, 64,
	64, -219, 64, 64, 64, 64, 64, 64, 64, -219,
	64, 64, 64, 64, 64, 70, 70, 70, 64, 113,
	112, 123, 116, 117, 118, 119, 120, 121, 122, 114,
	115, 110, 91, 108, 109, 93, -78, -210, -216, -208,
	-208, -208, -208, -283, -214, -210, 64, -210, 64, 64,
	64, -305, 64, 64, -218, -219, 64, 64, 64, -208,
	64, 64, -148, -303, -217, -344, 493, -102, 65, -97,
	-186, -342, -343, -97, -101, -186, -303, -102, 65, -342,
	-71, -71, -179, -180, -170, -176, -183, -184, -177, 204,
	31, 90, 34, 36, 305, 337, 93, 127, 20, 94,
	163, 126, 307, 421, 306, 199, 56, 423, 425, 424,
	414, 412, 357, 361, 363, 360, 413, 385, 40, 14,
	37, 220, 32, 33, 120, 201, 97, 98, 223, 35,
	221, 82, 23, 59, 15, 17, 18, 308, 356, 211,
	210, 110, 376, 207, 54, 12, 129, 38, 107, 358,
	50, 86, 52, 108, 21, 415, 416, 41, 375, 384,
	448, 227, 122, 309, 310, 57, 91, 364, 80, 61,
	87, 19, 55, 109, 202, 420, 53, 362, 313, 315,
	325, 445, 314, 205, 396, 10, 304, 422, 30, 219,
	51, 206, 96, 209, 81, 226, 6, 85, 13, 58,
	62, 417, 418, 419, 43, 95, 16, 316, 452, 377,
	378, 379, 380, 381, 382, 383, 188, 189, 190, 191,
	192, 268, 214, 212, 216, 217, 493, 494, 193, 194,
	294, 296, 166, 196, 197, 198, 228, 144, 7, 343,
	344, 345, 346, 348, 349, 350, 351, 352, 353, 354,
	23, -52, -354, 130, 131, -98, -262, -244, -241, -264,
	118, 67, -251, 131, 452, 501, 68, 209, -376, -375,
	356, 65, 131, -313, 210, 420, 70, 502, -313, 131,
	65, 130, 70, 131, 22, 131, -90, 36, 37, -111,
	211, -111, -370, 343, 35, -377, 131, 40, -375, -229,
	62, -224, -225, -223, -227, 40, -111, 15, -83, -112,
	-186, 64, 65, 131, -237, 62, -173, -210, -111, -149,
	-149, -196, -187, -198, -193, -198, -194, 130, -172, -370,
	-377, 30, -155, -156, -157, -158, 50, 54, 56, 51,
	52, 53, 57, 30, 131, -383, 34, -182, -188, 34,
	-183, 70, -184, -177, -182, -76, -78, 64, 139, 142,
	142, 141, 209, 64, 100, -258, -258, -258, 40, -185,
	61, 131, -149, -81, -82, -84, -210, -210, -210, -210,
	-186, 70, -186, 118, 80, 91, 297, 81, 82, -205,
	-222, 31, 278, 279, -215, -216, -210, -159, 32, 31,
	-159, -159, -210, -159, 118, -216, -216, 65, 75, -346,
	-347, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 309, 304, 310, 308, 301, 316, 311, 312,
	162, 443, 444, 437, 438, 439, 440, 441, 442, -159,
	-159, -159, -159, -159, -210, -361, 295, 294, 296, -159,
	-159, -159, -159, -215, -206, -206, -206, -206, -206, -206,
	-206, -206, -206, -206, -206, -206, -213, -220, -283, 64,
	110, 108, 109, 93, -208, -206, -206, 65, 131, -349,
	-348, 95, -210, -346, -215, -210, -215, -215, 65, 65,
	-216, -215, -206, -159, 70, -149, 131, 64, 65, 131,
	43, 130, 131, 100, 65, 131, 65, 43, 130, 372,
	-186, -325, 65, -264, 131, 209, 130, 130, -242, 323,
	-185, -244, 20, 452, -165, 38, 70, 38, -309, -186,
	-316, 390, -210, -210, -91, -99, 91, 64, -372, 392,
	345, -178, 100, -203, -202, 300, 41, -297, 365, 351,
	352, -243, 236, 61, 289, 290, 291, 292, -223, -171,
	126, 247, 64, -111, -83, -186, 15, 131, -366, 130,
	-1, -186, -236, -196, -149, -149, -196, -196, -198, -186,
	-372, -203, -248, -247, -165, -85, -85, -85, -85, 50,
	50, 50, 55, 50, 55, 50, -157, -248, -88, -186,
	-188, 65, 70, -165, 142, -244, -199, 70, -250, -111,
	-111, -151, 17, 130, 80, 297, 81, 82, -283, 65,
	131, -210, -210, -210, 34, -216, 65, 65, 65, 65,
	15, -210, -210, -210, -210, -210, 65, 15, 15, -210,
	-210, -210, -210, -210, 65, -216, -213, -208, -206, -206,
	-211, 223, 90, -210, -209, -348, 97, -210, 131, 62,
	65, 15, 65, 65, 65, 62, 65, 131, -210, 131,
	-151, -217, -311, -310, 43, -75, -97, -303, -186, -343,
	-309, -186, 43, -75, -303, -179, -176, -184, -177, 75,
	15, -241, -236, 118, 118, 67, 324, -251, 70, 344,
	70, 206, 100, 206, 130, -322, 382, 377, 379, 34,
	35, -106, -107, -108, -114, -109, -165, -201, -110, 214,
	212, 216, -339, 85, 217, 268, 86, 207, -373, 74,
	-368, 70, -374, 74, 346, 129, 302, 40, 347, 348,
	362, 298, 75, 75, 353, -369, 67, -111, -178, -178,
	-178, -106, -100, 62, 130, -82, -112, -186, 118, 65,
	-149, -149, -149, -196, -373, -374, -149, 131, 100, -104,
	-103, 61, 62, -105, 61, -103, 50, 50, -149, -99,
	65, 131, 65, 131, 65, -150, 18, 20, -186, 118,
	-210, 65, 65, 65, -115, -117, 339, 340, -121, -118,
	-120, -119, -123, -122, 163, 164, 127, 167, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 30, 179,
	222, 159, 160, 161, 162, 180, 145, 165, 450, 188,
	146, 189, 147, 190, 148, 191, 149, 150, 192, 151,
	154, 155, 156, 153, 65, -210, 65, 65, 65, 65,
	65, -210, -210, 15, 65, 65, 65, 65, 65, -211,
	90, -208, -205, 65, 98, -210, 96, -116, -122, 127,
	163, 222, 162, 161, 159, 339, 340, -131, -210, -131,
	-206, 65, 70, -150, 65, -303, -303, -236, -251, 365,
	-111, 70, -111, -291, 495, -320, 377, 20, 20, -75,
	-111, 65, 131, -117, -110, -186, 86, -338, -339, -226,
	-338, 86, 64, 70, -371, 356, 70, 70, 75, 40,
	75, 129, 349, -298, 64, -131, -133, -185, 127, 70,
	65, -182, -82, -186, -149, -366, 130, -149, -94, -247,
	-309, -210, 64, -210, 70, 70, -210, -216, 65, -124,
	150, 149, -124, -290, 340, 339, -284, -286, 64, -285,
	64, -285, -284, -284, 64, 64, -284, -287, 64, -287,
	-284, -288, 64, -288, -289, 64, -288, 65, 65, 65,
	-210, -205, -210, 65, -284, -285, -284, -287, -284, -124,
	-124, 65, 65, 23, 65, 65, 65, -74, -314, -270,
	503, 131, -74, -138, 496, 70, 20, 70, -318, 70,
	-99, -129, -130, -146, 337, 238, -227, 242, 74, 243,
	372, 244, 207, 246, 247, 248, 218, 249, 250, 251,
	365, 252, 253, 254, 255, 320, 6, 285, -108, -128,
	-127, -125, 80, 91, 40, 337, -126, 74, 126, 261,
	239, 262, -145, -200, 61, 212, 85, 86, 325, -201,
	-335, -336, -186, -336, -186, -335, -335, -226, -210, 20,
	452, 301, 40, 75, 40, 350, -231, -233, -165, 64,
	-73, -72, -149, -149, -95, -98, 65, 131, 65, 131,
	-292, 341, 75, 75, -167, 70, -167, 75, 75, 75,
	65, -210, -321, 382, -317, -315, 377, 378, 379, 380,
	70, -168, 497, 75, 70, 379, 34, -266, 228, 131,
	-146, -178, -178, -171, 126, -178, -178, -178, -178, 245,
	245, -178, -178, -178, -178, -178, -178, -178, -178, -178,
	-178, -178, -178, -178, -178, 64, -125, 80, -206, 70,
	-133, -134, 40, 260, 256, -135, 40, 240, 241, -137,
	64, 268, 13, 86, 86, -111, 64, 62, 277, 64,
	64, 64, -336, 65, 70, 344, 70, 301, 65, 131,
	-284, -210, -74, -94, 65, 81, 82, 81, 82, 65,
	65, 65, 131, 65, 65, 65, 131, 65, 131, 65,
	-323, 210, -319, 381, -315, 20, 379, 20, 20, 100,
	64, 20, -75, 20, -146, 75, 75, -178, -178, 75,
	70, 70, 70, -178, -178, 75, 70, -188, 75, 75,
	75, 75, 40, 70, -136, 40, 256, 260, 257, 258,
	259, 75, 40, 75, 40, 75, 40, -186, 64, -340,
	-341, 70, 75, 64, -304, -232, 64, -231, -337, 289,
	290, 291, 293, 292, -337, -231, -231, -231, 64, -253,
	-252, 269, 91, 365, -234, -233, -90, 65, -95, 65,
	65, 65, 65, 70, 75, 75, -330, 64, 75, -320,
	20, -318, 20, -318, -318, 70, -169, -186, -318, -267,
	270, 271, -268, -274, 273, -131, -131, 70, 70, -132,
	239, -113, 65, 131, 100, 65, -210, -218, -140, -139,
	448, -231, 65, 65, 65, 65, -231, 269, -235, 218,
	74, 452, 287, 288, -90, 65, 65, -334, 30, 65,
	-329, -328, -166, -324, -186, 382, 383, 70, -318, 503,
	65, 131, -272, 274, 64, -270, 64, -270, 86, 290,
	240, 241, 65, -341, 70, 65, -144, -142, -143, 61,
	388, 266, 267, 65, -234, -234, -234, -234, 65, -178,
	70, 286, -333, -332, -331, 65, 131, 130, -186, -269,
	275, 75, -206, 64, -206, 64, -271, 272, 64, -252,
	-143, 61, -142, 61, 14, 13, -145, 75, -184, 131,
	100, -328, -186, -276, 64, 20, 65, -265, 65, -265,
	64, 100, -206, -141, 263, 264, 30, 141, -141, -332,
	40, -210, 130, -277, -275, 228, -268, 65, 65, -265,
	75, 65, 80, 40, 265, -186, 65, 131, 67, -273,
	276, 65, -275, -278, 43, 75, -282, -279, 64, -146,
	230, 110, -282, -146, -281, -280, 275, 231, 64, 65,
	131, 67, 227, 64, -216, -280, -279, -216, 65, 65,
}

var yyDef = [...]int{
	26, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 597, 598, 599, 600,
	0, 0, 383, 384, 0, 363, 0, 0, 0, 0,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 303, 262, 263, 0, 210, 206, 185, 186,
	187, 148, 149, 150, 151, 268, 0, 0, 0, 0,
	460, -2, 601, 602, 603, 604, -2, 396, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 251, 252, 253,
	248, 249, 250, -2, 0, 396, 199, 0, 190, 190,
	0, 480, 0, 0, 491, 513, 26, 438, 0, 443,
	781, 817, 818, 819, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 438, 211, 385, 386, 480, 480, 234, 0, 1401,
	238, 0, 0, 0, 360, 229, 230, 231, 232, 233,
	0, 589, 0, 226, 0, 205, 1460, 0, 0, 0,
	0, 0, 0, 92, 643, 94, 645, 98, 105, 0,
	0, 110, 111, 114, 115, 116, 117, 118, 0, 122,
	0, 124, 127, 0, 129, 130, 0, 133, 134, 135,
	0, 145, 146, 147, 646, 647, 72, 72, 480, 549,
	0, -2, 0, 0, 0, 496, 499, 502, 505, 607,
	672, 672, 672, 0, 672, 0, 691, 649, 650, 651,
	670, 671, 401, 397, 398, 399, 400, 468, 0, 470,
	473, 304, 0, 343, 0, 0, 475, 475, 0, 352,
	343, 343, -2, 0, 314, 315, 316, 309, 0, 309,
	320, 321, 322, 332, 333, 353, 1187, 0, 0, 268,
	268, 403, 200, 201, 189, 191, 0, 195, 0, 188,
	1460, 0, 0, 159, 1526, 164, 0, 1408, 1474, 1423,
	0, 0, 1441, 0, 183, -2, 475, 0, 481, 0,
	480, 0, 268, 268, 268, 268, 268, 268, 268, 0,
	0, 0, 514, 515, 510, 511, 512, 516, 517, 3,
	0, 0, 442, 0, 0, 475, -2, 0, 235, 820,
	0, 0, 239, 240, 0, 0, 254, 0, 257, 243,
	244, 245, 0, 0, 228, 0, 0, 207, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 102, 99,
	106, 109, 119, 126, 0, 138, 140, 143, 100, 107,
	112, 113, 120, 141, 101, 103, 104, 108, 142, 144,
	121, 125, 139, 123, 128, 131, 132, 137, 0, 73,
	0, 475, 0, 0, 463, 0, 444, 0, 493, 495,
	0, 497, 498, 500, 501, 503, 504, 506, 507, 0,
	672, 608, 0, 0, 0, 0, 0, 0, 672, 403,
	402, 0, 469, 0, 0, 0, 309, 522, 0, 0,
	326, 327, 328, 343, 343, 334, 476, 335, 336, 345,
	0, 350, 351, 0, 522, 522, 0, 0, 0, 672,
	311, 310, 348, 349, 318, 311, 1188, 1189, 0, 0,
	0, 404, 0, 0, 193, 0, 198, 152, 0, 0,
	0, 0, 0, 0, 181, 182, 0, 0, 0, 0,
	0, 172, 175, 775, 776, 640, 641, 176, 177, 0,
	444, 492, 494, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 382, 530, 524, 526, 584, 35, 0, 1071,
	1072, 817, 1083, -2, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, -2, 1550, -2, -2, 1553, 1554, 1555, 1557, -2,
	-2, -2, -2, -2, -2, 1564, -2, -2, -2, 1568,
	1569, -2, -2, 1572, 1573, 1574, 1575, 1576, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1526, 1092, 888,
	889, 890, 891, 0, 0, 0, 0, 0, 898, 899,
	0, 912, 0, 905, 906, 907, 908, 909, 47, 48,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1037, 875, 0, 0, 0, 1022, 0, 1012, 0, 0,
	0, 0, 0, 0, 49, 50, 1540, 1028, 1030, 1031,
	1033, 1034, 1035, 1036, 1039, 1040, 1041, 1044, 1045, 1046,
	1047, 1048, 1049, 1052, 1054, 1056, 1024, 1025, 1026, 1027,
	1016, 1017, 1018, 1019, 1020, 1021, 530, 412, 430, 414,
	0, 419, 0, 782, 405, 430, 407, 0, 419, 444,
	466, 444, 0, 236, 0, 241, 0, 0, 256, 258,
	259, 260, 246, 247, 361, 224, 225, 217, 218, 219,
	220, 221, 222, 223, 227, 45, 0, 208, 209, 0,
	0, 0, 86, 87, 88, 89, 90, 91, 93, 77,
	374, 376, 632, 644, 0, 635, 0, 96, 136, 69,
	0, 69, 548, 550, 0, 434, 436, 437, 35, 0,
	464, 477, 482, 483, 486, 0, 0, 0, 610, 0,
	266, 626, 0, 642, 664, 594, 595, 596, -2, 0,
	0, 471, 0, 0, 562, 306, 311, 313, 0, 344,
	0, 522, 522, 343, 0, 345, 0, 345, 339, 340,
	0, 354, 357, 355, 0, 317, 312, 359, 319, 0,
	266, 535, 0, 536, 537, 533, 564, 576, 579, 579,
	0, 0, 202, 203, 0, 0, 197, 153, 154, 0,
	156, 157, 158, 165, 160, 162, 0, 0, 166, 178,
	179, 180, 0, 0, 0, 170, 171, 0, 184, 462,
	372, 373, 377, 0, 379, 779, 380, 381, 590, 591,
	522, 0, 531, 0, 527, 0, 0, 0, 0, 585,
	0, 587, 0, 1070, 0, 0, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1062, 1058, 1058, 1058, 0, 1058, 0,
	0, 997, 0, 0, 1058, 1058, 1058, 1058, 1058, 998,
	0, 1058, 1058, 1058, 1058, 1006, 1011, 1005, 1062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1064, 0, 894,
	895, 896, 897, 900, 0, 913, 0, 0, 1062, 1062,
	1062, 1000, 0, 0, 1002, 1013, 0, 1062, 0, 1010,
	1058, 0, 522, 413, 427, 0, 431, 0, 0, 423,
	425, 418, 420, 0, 0, 440, 406, 0, 0, 411,
	465, 467, 821, 0, 1194, -2, 1196, -2, -2, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	0, 242, 255, 0, 0, 0, 0, 80, 629, 0,
	81, 85, 75, 0, 0, 0, 634, 0, 631, 636,
	0, 95, 0, 0, 70, 71, 686, 0, 0, 0,
	551, 0, 446, 0, 0, 0, 485, 487, 488, 473,
	0, 0, 616, 1190, 673, 270, 0, 0, 628, 0,
	0, 669, -2, 676, 0, 682, 0, 0, 0, 390,
	394, 26, 474, 0, 305, 0, 343, 523, 522, 329,
	330, 522, 346, 343, 347, 343, 345, 0, 356, 616,
	270, 0, 0, 0, 0, 0, 555, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 577, 566, 580, 0,
	582, 583, 592, 593, 578, 0, 480, 0, 204, 192,
	194, 0, 0, 0, 0, 167, 168, 169, 173, 174,
	0, 0, 520, 525, 532, 535, 1066, 1067, 1068, 1069,
	586, 588, 36, 528, 1073, 0, 1075, 1077, 1079, 1081,
	0, 1097, -2, -2, 0, 1063, 1064, 0, 1059, 1060,
	0, 0, 0, 0, 0, 0, 0, 1014, 0, 0,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 963, 964, 965, 0,
	0, 0, 0, 0, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 1084, 1095, 1096, 0,
	0, 0, 0, 0, 1093, 1088, 0, 892, 0, 910,
	914, 0, 0, 1057, 0, 1064, 0, 0, 1023, 1001,
	0, 0, 0, 0, 0, 520, 430, 432, 0, 0,
	430, 0, 0, 0, 439, 0, 0, 430, 0, 0,
	362, 46, 261, 0, 0, 0, 0, 0, 375, 0,
	633, 77, 0, 0, 97, 0, 0, 0, 435, 36,
	450, 0, 478, 479, 484, 0, 0, 783, 619, 617,
	618, 0, 1191, 623, 271, 272, 273, 274, 0, 0,
	0, 627, 0, 0, 665, 666, 667, 668, 677, 1190,
	1190, 1190, 783, 438, 0, -2, 0, 0, 392, 0,
	0, 563, 307, 522, 323, 337, 522, 522, 343, 358,
	619, 623, 522, 214, 0, 558, 552, 0, 541, 556,
	557, 544, 0, 546, 0, 542, 543, 522, 534, 473,
	581, 567, 0, 0, 196, 155, 0, 290, 161, 378,
	780, 518, 0, 0, 1074, 1076, 1078, 1080, 1082, 950,
	0, 0, 0, 0, 0, 0, 939, 933, 934, 1015,
	0, 0, 0, 0, 0, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 1009, 0, 1085, 1093, 1089, 0,
	1086, 0, 0, 1065, 0, 915, 0, 0, 0, 0,
	951, 0, 955, 999, 1003, 0, 1007, 0, 0, 0,
	518, 428, 0, 433, 430, 417, 424, 416, 426, 421,
	422, 441, 430, 410, 409, 822, 1195, 1192, 1193, 237,
	0, 630, 77, 82, 83, 84, 78, 76, 637, 0,
	639, 0, 0, 0, 0, 452, 58, 0, 0, 0,
	0, 0, 784, 785, 787, 788, 0, 0, 790, 845,
	0, 799, 672, 799, 0, 0, 801, 802, 609, 0,
	0, 612, 621, 0, 0, 0, 276, 277, 0, 0,
	0, 289, 285, 286, 287, 267, 622, 0, 0, 0,
	0, 0, 579, 0, 0, 522, 391, 394, 395, 472,
	308, 341, 338, 522, 264, 265, 480, 0, 0, 538,
	559, 0, 0, 539, 0, 540, 545, 547, 213, 565,
	568, 0, 572, 0, 163, 508, 0, 0, 37, 529,
	1065, 935, 936, 937, 0, 917, 929, 929, 1182, 1122,
	1123, 1124, 1169, 1126, 1173, 1173, 1169, 1169, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 0, 0, 1165,
	1145, 1169, 1171, 1171, 1169, 1166, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1176, 1176, 1179, 1176, 938, 0, 957, 940, 941, 944,
	942, 0, 0, 0, 956, 945, 946, 932, 1061, 1087,
	0, 1094, 1090, 893, 901, 911, 0, 0, 920, 1169,
	1173, 923, 1169, 1171, 1169, 929, 929, 0, 0, 0,
	0, 943, 0, 509, 429, 415, 408, 79, 74, 638,
	60, 0, 60, 454, 0, 451, 0, 0, 0, 605,
	473, -2, 0, -2, 789, 846, 811, 811, 800, 811,
	811, 672, 0, 620, 611, 0, 624, 625, 0, 278,
	279, 0, 282, 288, 0, 678, 679, 777, 778, 680,
	0, 522, 522, -2, 388, 393, 0, 342, 475, 215,
	216, 560, 0, 553, 0, 0, 519, 521, 902, 918,
	930, 931, 919, 1185, 1183, 1184, 1125, 1170, 0, 1150,
	0, 1151, 1152, 1153, 0, 0, 1146, 1147, 0, 1148,
	1149, 1141, 0, 1142, 1143, 0, 1144, 954, 959, 960,
	0, 1091, 916, 903, 921, 922, 924, 925, 926, 927,
	928, 904, 952, 0, 1004, 1008, 962, 28, 54, 0,
	687, 0, 27, 456, 0, 453, 0, 447, 449, 68,
	0, 692, -2, 731, 1190, 1190, 0, 1190, 1190, 1190,
	1190, 0, 0, 1190, 1190, 1190, 1190, 1190, 1190, 1190,
	1190, 1190, 1190, 1190, 1190, 1190, 1190, 0, 786, 813,
	-2, 825, 827, 0, 0, 830, 831, 0, 0, 0,
	0, 867, 837, 0, 0, 0, 1109, 1110, 0, 844,
	0, 803, 812, 0, 812, 0, 0, 811, 0, 0,
	0, 275, 280, 0, 283, 284, 0, 660, 1169, 0,
	684, 60, 480, 389, 212, 0, 569, 0, 573, 0,
	1121, 1186, 0, 0, 0, 1167, 0, 0, 0, 0,
	961, 0, 51, 56, 61, 62, 0, 0, 0, 0,
	0, 445, 0, 455, 59, 0, 0, 683, 0, 681,
	733, 0, 0, 1190, 1190, 0, 0, 0, 0, 1190,
	1190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 828, 829, 832,
	833, 834, 872, 873, 874, 835, 869, 870, 871, 836,
	0, 0, 0, 1107, 1108, 865, 0, 0, 0, 0,
	0, 0, 0, 797, 613, 0, 615, 281, 653, 0,
	486, 0, 685, 475, 561, 0, 0, 0, 0, 1175,
	1174, 1163, 0, 1164, 1172, 1177, 0, 1180, 0, 953,
	38, 0, 58, 0, 63, 0, 0, 0, 0, 0,
	0, 0, 606, 727, 732, 734, 735, 0, 0, 738,
	739, 740, 741, 0, 0, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 769, 770, 771, 772, 773,
	774, 754, 755, 756, 757, 758, 759, 766, 0, 0,
	763, 0, 0, 0, 1012, 860, 0, 0, 804, 806,
	807, 808, 809, 810, 805, 0, 0, 0, 0, 796,
	798, 841, 0, 614, 652, 661, 662, 486, 387, 570,
	571, 574, 575, 1168, 0, 0, 29, 0, 0, 55,
	0, 64, 0, 66, 67, 0, 0, 458, 448, 716,
	0, 0, 722, 0, 728, 736, 737, 742, 743, 760,
	0, 0, 762, 0, 0, 868, 0, 840, 848, 861,
	0, 0, 653, 653, 653, 653, 0, 842, 654, 1190,
	0, 0, 658, 659, 663, 1178, 1181, 689, 0, 39,
	0, 41, 43, 44, 814, 52, 53, 57, 65, 688,
	457, 0, 694, 0, 0, 0, 0, 0, 725, 0,
	767, 768, 761, 764, 765, 838, 847, 849, 850, 0,
	862, 863, 864, 866, 791, 792, 793, 794, 0, 0,
	656, 0, 30, 31, 0, 40, 0, 0, 459, 696,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 839,
	851, 0, 852, 0, 0, 0, 795, 655, 657, 0,
	0, 42, 815, 693, 0, 727, 718, 0, 720, 0,
	0, 0, 0, 853, 855, 856, 0, 0, 854, 32,
	33, 34, 0, 0, 698, 0, 714, 719, 721, 0,
	726, 724, 857, 859, 858, 816, 697, 0, 710, 695,
	0, 723, 699, -2, 0, 715, 700, -2, 0, 708,
	0, 0, 701, 709, 0, 704, 0, 0, 0, 703,
	0, -2, 711, 0, 0, 705, -2, 0, 713, 712,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 121, 113, 3,
	64, 65, 118, 116, 131, 117, 130, 119, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 500,
	101, 100, 102, 3, 501, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 123, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 502, 112, 503, 124,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 93, 94,
	95, 96, 97, 98, 99, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 114, 115, 120, 122, 125, 126,
	127, 128, 129, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:554
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:560
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:589
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:593
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:599
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:611
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:626
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:632
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:636
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:642
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:649
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:658
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:662
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:666
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:679
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:685
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:694
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:705
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:709
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:715
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:719
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:725
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:729
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:735
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:759
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:778
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:782
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:786
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:795
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:803
		{
			yyVAL.str = ""
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:807
		{
			yyVAL.str = yyDollar[3].str
		}
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:812
		{
			yyVAL.str = "\n"
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:816
		{
			yyVAL.str = yyDollar[3].str
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:825
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:849
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:853
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:859
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:865
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:883
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:900
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:923
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:931
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:946
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:959
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1023
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1029
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1035
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1042
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1050
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1059
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1063
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1067
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1071
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1075
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1079
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1086
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1090
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1096
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1103
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1112
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1116
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1146
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1150
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1154
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1178
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1182
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1186
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1306
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1310
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1330
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1337
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1344
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1353
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1383
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1387
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1391
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1403
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1407
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1414
		{
			yyVAL.str = yyDollar[3].str
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1420
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1424
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1430
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1438
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1447
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1455
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1463
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1486
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1509
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1558
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1562
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1568
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1572
		{
			yyVAL.str = yyDollar[1].str
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1579
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1643
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1651
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1656
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1661
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1674
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1680
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1687
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1694
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1704
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1711
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1722
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1737
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1743
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1755
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1791
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1797
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1801
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1833
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1885
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1897
		{
			yyVAL.str = yyDollar[1].str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1902
		{
			yyVAL.str = "true"
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1903
		{
			yyVAL.str = "false"
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1904
		{
			yyVAL.str = yyDollar[1].str
		}
	case 261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1909
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1947
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1965
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1985
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1993
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2047
		{
			yyVAL.item = nil
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2052
		{
			yyVAL.item = nil
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2089
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2100
		{
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2104
		{
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2109
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2130
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2134
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2164
		{
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2166
		{
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2202
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2248
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2258
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2287
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2292
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2296
		{
			yyVAL.str = yyDollar[2].str
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2302
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2315
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2334
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2340
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2344
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2353
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2357
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2361
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2380
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2389
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2398
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2402
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2442
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2514
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2518
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2524
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2529
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2536
		{
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2538
		{
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2541
		{
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2550
		{
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2554
		{
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2568
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2575
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2581
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2589
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2603
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2632
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2639
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2645
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2653
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2660
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2667
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2690
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2694
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2700
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2709
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2713
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2719
		{
			yyVAL.str = yyDollar[1].str
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2723
		{
			yyVAL.str = yyDollar[3].str
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2729
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2733
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2739
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2744
		{
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2755
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2759
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2775
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2785
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2791
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2795
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2817
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2824
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2831
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2849
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2868
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2881
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2885
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2898
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2902
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2907
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2911
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2918
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2923
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2930
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2978
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2982
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2988
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3000
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3009
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3015
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3019
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3023
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3032
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3038
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3044
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3048
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3059
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3063
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3067
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3084
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3118
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3258
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3262
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3266
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3288
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3303
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3307
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3313
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3317
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3321
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3325
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3330
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3338
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3352
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3356
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3369
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3378
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3388
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3397
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3407
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3411
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3421
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3425
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3429
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3433
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3449
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3453
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3459
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3475
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3481
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3485
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3489
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3495
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3499
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3509
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3515
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3519
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3525
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3529
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3539
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3555
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3561
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3574
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3590
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3606
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3622
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3635
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3651
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3667
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3686
		{
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3687
		{
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3703
		{
			yyVAL.str = ""
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3707
		{
			yyVAL.str = yyDollar[1].str
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3711
		{
			yyVAL.str = yyDollar[2].str
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3720
		{
			yyVAL.str = ""
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3724
		{
			yyVAL.str = yyDollar[1].str
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3728
		{
			yyVAL.str = yyDollar[2].str
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3732
		{
			yyVAL.str = yyDollar[1].str
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3736
		{
			yyVAL.str = yyDollar[2].str
		}
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3780
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3791
		{
		}
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3796
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3808
		{
			yyVAL.str = yyDollar[1].str
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3814
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3824
		{
			yyVAL.str = yyDollar[1].str
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3830
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3837
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3843
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3851
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3857
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3864
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3872
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3878
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3887
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3899
		{
			yyVAL.str = yyDollar[1].str
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3904
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3910
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3918
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4024
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4028
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4044
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4048
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4054
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4064
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4068
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4072
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4081
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4094
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4100
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4113
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4122
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4126
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4132
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4149
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4153
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4157
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4161
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4167
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4190
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4212
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4216
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4220
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4234
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4238
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4244
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4249
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4254
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4258
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4262
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4266
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4270
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4276
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4303
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4309
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4313
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4323
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4332
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4336
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4353
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4364
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4371
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4378
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4389
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4402
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4426
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4440
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4453
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4459
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4463
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4478
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4492
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4498
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4502
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4524
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4528
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4537
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4546
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4551
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4555
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4565
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4569
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4580
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4588
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4604
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4615
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4625
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4635
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4639
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4644
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4648
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4657
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4663
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4667
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4671
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4677
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4681
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4685
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4689
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4693
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4697
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4701
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4705
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4709
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4713
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4717
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4721
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4725
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4729
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4733
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4737
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4741
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4745
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4749
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4753
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4757
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4761
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4769
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4777
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4781
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4785
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4789
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4796
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4800
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4811
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4815
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4819
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4825
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4829
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4833
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4837
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4841
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4859
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4863
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4872
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4877
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4890
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4894
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4900
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4904
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4910
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4920
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4926
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4935
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4944
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4967
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4976
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4986
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5000
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5004
		{
			yyVAL.str = yyDollar[1].str
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5014
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5020
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5026
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5040
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5053
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5057
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5061
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5072
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5076
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5080
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5089
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5095
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5099
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5105
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5109
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5113
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5117
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5121
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5125
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5129
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5145
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5149
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5153
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5157
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5172
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5181
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5185
		{
			yyVAL.str = yyDollar[1].str
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5191
		{
			yyVAL.str = ""
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5195
		{
			yyVAL.str = yyDollar[2].str
		}
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5201
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5213
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5220
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5234
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5241
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5250
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5256
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5262
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5266
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5270
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5274
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5278
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5294
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5307
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5312
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5316
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5332
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5338
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5342
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5346
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5354
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5362
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5382
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5386
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5392
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5396
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5400
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5404
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5408
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5432
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5436
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5441
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5449
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5453
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5457
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5466
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5470
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5474
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5478
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5482
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5491
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5500
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5506
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5510
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5516
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5526
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5560
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5573
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5586
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5598
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5612
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5627
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5642
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5659
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5674
		{
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5680
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5689
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5697
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5705
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5714
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5723
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5732
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5741
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5750
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5759
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5768
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5777
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5795
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5804
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5836
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5844
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5852
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5861
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5869
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5878
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5887
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5895
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5903
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5912
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5922
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5943
		{
			yyVAL.str = yyDollar[1].str
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5979
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5991
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6005
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6013
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6020
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6027
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6039
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6047
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6058
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6067
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6076
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6084
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6094
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6102
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6110
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6124
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6134
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6153
		{
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6155
		{
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6196
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6206
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6210
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6220
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6225
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6229
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6235
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6239
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6246
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6250
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6254
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6274
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6300
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6304
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6308
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6312
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6316
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6324
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6328
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6332
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6336
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6340
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6344
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6348
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6352
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6362
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6368
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6372
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6379
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6383
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6387
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6393
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6397
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6401
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6405
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6409
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6413
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6417
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6423
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6427
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6431
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6435
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6441
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6445
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6458
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6463
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6467
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6471
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6475
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6489
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6493
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6507
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6513
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6524
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6529
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6547
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6559
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6571
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6584
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6597
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6610
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6623
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6636
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6675
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6688
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6701
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6716
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6739
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6776
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6824
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6841
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6853
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6868
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6888
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6908
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6937
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6963
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6976
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6988
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7000
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7012
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7024
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7048
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7060
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7097
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7127
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7150
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7155
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7161
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7168
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7172
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7177
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7181
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7187
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7216
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7230
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7243
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7247
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7253
		{
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7255
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7265
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
